-- -------------------------------------------------------------
-- 
-- File Name: /u/home/eraguzin/matlab/LNspec/matlab/codegen/cal_process/hdlsrc/cal_process_fixpt.vhd
-- Created: 2023-11-22 12:46:23
-- 
-- Generated by MATLAB 9.12, MATLAB Coder 5.4 and HDL Coder 3.20
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- drift                         ce_out        1
-- foutreal1                     ce_out        1
-- foutimag1                     ce_out        1
-- foutreal2                     ce_out        1
-- foutimag2                     ce_out        1
-- foutreal3                     ce_out        1
-- foutimag3                     ce_out        1
-- foutreal4                     ce_out        1
-- foutimag4                     ce_out        1
-- fout_ready                    ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: cal_process_fixpt
-- Source Path: cal_process_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.cal_process_fixpt_pkg.ALL;

ENTITY cal_process_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        outreal1                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        outimag1                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        powertop1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En18
        powerbot1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En33
        drift_FD1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En5
        drift_SD1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_E11
        outreal2                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En25
        outimag2                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En25
        powertop2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En21
        powerbot2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En21
        drift_FD2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En7
        drift_SD2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_E8
        outreal3                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        outimag3                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        powertop3                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En18
        powerbot3                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En33
        drift_FD3                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En5
        drift_SD3                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_E11
        outreal4                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En25
        outimag4                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En25
        powertop4                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En21
        powerbot4                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En21
        drift_FD4                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En7
        drift_SD4                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_E8
        calbin                            :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        readyout                          :   IN    std_logic;
        drift_1                           :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En46
        update_drift                      :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        drift                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32_En46
        foutreal1                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En20
        foutimag1                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En20
        foutreal2                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        foutimag2                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        foutreal3                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En20
        foutimag3                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En20
        foutreal4                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        foutimag4                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        fout_ready                        :   OUT   std_logic
        );
END cal_process_fixpt;


ARCHITECTURE rtl OF cal_process_fixpt IS

  -- Constants
  CONSTANT C_divbyzero_p                  : unsigned(61 DOWNTO 0) := 
    unsigned'("11111111111111111111111111111111111111111111111111111111111111");  -- ufix62
  CONSTANT C_divbyzero_p_2                : unsigned(61 DOWNTO 0) := 
    unsigned'("11111111111111111111111111111111111111111111111111111111111111");  -- ufix62
  CONSTANT C_divbyzero_p_4                : signed(38 DOWNTO 0) := 
    signed'("011111111111111111111111111111111111111");  -- sfix39
  CONSTANT C_divbyzero_n                  : signed(38 DOWNTO 0) := 
    signed'("100000000000000000000000000000000000000");  -- sfix39

  -- Functions
  -- HDL_SIM_INDEX_CHECK: Enabled by the "SimIndexCheck" option.
  FUNCTION hdl_sim_index_check(addr : integer; low: integer; high: integer ) RETURN integer IS
  BEGIN
    --pragma translate off
    IF addr >= low AND addr <= high THEN
      RETURN addr;
    ELSE
      -- Index out of bounds. Undefined result. Return arbitrary value in range.
      RETURN low;
    END IF;
    --pragma translate on
    return addr;
  END FUNCTION;


  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL drift_1_unsigned                 : unsigned(31 DOWNTO 0);  -- ufix32_En46
  SIGNAL tmp                              : unsigned(31 DOWNTO 0);  -- ufix32_En46
  SIGNAL tmp_1                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_2                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL drift_SD1_signed                 : signed(31 DOWNTO 0);  -- sfix32_E11
  SIGNAL drift_SD2_signed                 : signed(31 DOWNTO 0);  -- sfix32_E8
  SIGNAL drift_SD3_signed                 : signed(31 DOWNTO 0);  -- sfix32_E11
  SIGNAL drift_SD4_signed                 : signed(31 DOWNTO 0);  -- sfix32_E8
  SIGNAL SD                               : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_3                            : signed(31 DOWNTO 0);  -- sfix32_E19
  SIGNAL p148tmp_add_cast                 : signed(40 DOWNTO 0);  -- sfix41_E11
  SIGNAL p148tmp_add_cast_1               : signed(40 DOWNTO 0);  -- sfix41_E11
  SIGNAL p148tmp_add_temp                 : signed(40 DOWNTO 0);  -- sfix41_E11
  SIGNAL SD_1                             : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL SD_2                             : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL SD_3                             : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL SD_4                             : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_4                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_5                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_6                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_7                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_8                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_9                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL powerbot1_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En33
  SIGNAL powerbot2_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En21
  SIGNAL powerbot3_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En33
  SIGNAL powerbot4_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En21
  SIGNAL bot                              : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_10                           : unsigned(31 DOWNTO 0);  -- ufix32_En15
  SIGNAL p150tmp_add_cast                 : unsigned(50 DOWNTO 0);  -- ufix51_En33
  SIGNAL p150tmp_add_cast_1               : unsigned(50 DOWNTO 0);  -- ufix51_En33
  SIGNAL p150tmp_add_temp                 : unsigned(50 DOWNTO 0);  -- ufix51_En33
  SIGNAL bot_1                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL bot_2                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL bot_3                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL bot_4                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_11                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_12                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_13                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_14                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_15                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_16                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL powertop1_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En18
  SIGNAL powertop2_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En21
  SIGNAL powertop3_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En18
  SIGNAL powertop4_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En21
  SIGNAL top                              : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_17                           : unsigned(31 DOWNTO 0);  -- ufix32_En9
  SIGNAL p149tmp_add_cast                 : unsigned(41 DOWNTO 0);  -- ufix42_En18
  SIGNAL p149tmp_add_cast_1               : unsigned(41 DOWNTO 0);  -- ufix42_En18
  SIGNAL p149tmp_add_temp                 : unsigned(41 DOWNTO 0);  -- ufix42_En18
  SIGNAL top_1                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL top_2                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL top_3                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL top_4                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_18                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_19                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_20                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_21                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL SDX_1                            : signed(31 DOWNTO 0);  -- sfix32_E20
  SIGNAL tmp_23                           : std_logic;
  SIGNAL tmp_24                           : vector_of_signed32(0 TO 3);  -- sfix32_E2 [4]
  SIGNAL tmp_25                           : vector_of_signed32(0 TO 3);  -- sfix32_E2 [4]
  SIGNAL drift_FD1_signed                 : signed(31 DOWNTO 0);  -- sfix32_En5
  SIGNAL drift_FD2_signed                 : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL drift_FD3_signed                 : signed(31 DOWNTO 0);  -- sfix32_En5
  SIGNAL drift_FD4_signed                 : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL FD                               : vector_of_signed32(0 TO 3);  -- sfix32_E2 [4]
  SIGNAL tmp_26                           : signed(31 DOWNTO 0);  -- sfix32_E2
  SIGNAL p147tmp_add_cast                 : signed(39 DOWNTO 0);  -- sfix40_En5
  SIGNAL p147tmp_add_cast_1               : signed(39 DOWNTO 0);  -- sfix40_En5
  SIGNAL p147tmp_add_temp                 : signed(39 DOWNTO 0);  -- sfix40_En5
  SIGNAL FD_1                             : vector_of_signed32(0 TO 3);  -- sfix32_E2 [4]
  SIGNAL FD_2                             : vector_of_signed32(0 TO 3);  -- sfix32_E2 [4]
  SIGNAL FD_3                             : vector_of_signed32(0 TO 3);  -- sfix32_E2 [4]
  SIGNAL FD_4                             : vector_of_signed32(0 TO 3);  -- sfix32_E2 [4]
  SIGNAL tmp_27                           : vector_of_signed32(0 TO 3);  -- sfix32_E2 [4]
  SIGNAL tmp_28                           : vector_of_signed32(0 TO 3);  -- sfix32_E2 [4]
  SIGNAL tmp_29                           : vector_of_signed32(0 TO 3);  -- sfix32_E2 [4]
  SIGNAL tmp_30                           : vector_of_signed32(0 TO 3);  -- sfix32_E2 [4]
  SIGNAL FDX_1                            : signed(31 DOWNTO 0);  -- sfix32_E3
  SIGNAL tmp_32                           : std_logic;
  SIGNAL varargout_1                      : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL varargout_1_1                    : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL p0varargout_1_div_temp           : signed(38 DOWNTO 0);  -- sfix39_En24
  SIGNAL p0varargout_1_slice_cast         : signed(38 DOWNTO 0);  -- sfix39_En4
  SIGNAL p0varargout_1_slice_cast_1       : signed(38 DOWNTO 0);  -- sfix39_En24
  SIGNAL p0varargout_1_cast               : signed(38 DOWNTO 0);  -- sfix39_En4
  SIGNAL varargout_1_2                    : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL tmp_33                           : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL tmp_34                           : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL drift_2                          : unsigned(31 DOWNTO 0);  -- ufix32_En46
  SIGNAL p0drift_add_cast                 : signed(87 DOWNTO 0);  -- sfix88_En46
  SIGNAL p0drift_add_cast_1               : signed(87 DOWNTO 0);  -- sfix88_En46
  SIGNAL p0drift_add_temp                 : signed(87 DOWNTO 0);  -- sfix88_En46
  SIGNAL tmp_35                           : unsigned(31 DOWNTO 0);  -- ufix32_En46
  SIGNAL tmp_36                           : unsigned(31 DOWNTO 0);  -- ufix32_En46
  SIGNAL tmp_37                           : unsigned(31 DOWNTO 0);  -- ufix32_En46
  SIGNAL foutreal1_1                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_38                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_39                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Nac2                             : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Nac2_1                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Nac2_2                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL tmp_40                           : std_logic;
  SIGNAL tmp_41                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL tmp_42                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL tmp_43                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL tmp_44                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL tmp_45                           : std_logic;
  SIGNAL sig_real                         : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_46                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_47                           : std_logic;
  SIGNAL tmp_48                           : vector_of_signed32(0 TO 3);  -- sfix32_En20 [4]
  SIGNAL calbin_unsigned                  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_49                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p160tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_50                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outreal1_signed                  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_51                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p151tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_52                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outreal2_signed                  : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL tmp_53                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p153tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_54                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outreal3_signed                  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_55                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p155tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_56                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outreal4_signed                  : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL tmp_57                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p157tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_58                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_59                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_60                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_61                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p88tmp_add_cast                  : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p88tmp_add_cast_1                : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p88tmp_add_temp                  : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL sig_real_1                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_62                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_63                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_1                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_64                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_65                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p98tmp_add_cast                  : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p98tmp_add_cast_1                : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p98tmp_add_temp                  : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL sig_real_2                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_66                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_67                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_2                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_68                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_69                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p108tmp_add_cast                 : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p108tmp_add_cast_1               : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p108tmp_add_temp                 : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL sig_real_3                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_real_4                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_70                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_3                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_71                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_72                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p118tmp_add_cast                 : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p118tmp_add_cast_1               : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p118tmp_add_temp                 : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL sig_real_5                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_73                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_real_6                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_74                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_75                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_real_7                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_76                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL foutreal1_2                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0foutreal1_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_77                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_78                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutreal1_3                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_79                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutimag1_1                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_80                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_81                           : std_logic;
  SIGNAL sig_imag                         : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_82                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_83                           : std_logic;
  SIGNAL tmp_84                           : vector_of_signed32(0 TO 3);  -- sfix32_En20 [4]
  SIGNAL tmp_85                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p162tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_86                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outimag1_signed                  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_87                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p152tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_88                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outimag2_signed                  : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL tmp_89                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p154tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_90                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outimag3_signed                  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_91                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p156tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_92                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outimag4_signed                  : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL tmp_93                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p158tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_94                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_95                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_4                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_96                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_97                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p83tmp_add_cast                  : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p83tmp_add_cast_1                : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p83tmp_add_temp                  : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL sig_imag_1                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_98                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_99                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_5                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_100                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_101                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p93tmp_add_cast                  : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p93tmp_add_cast_1                : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p93tmp_add_temp                  : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL sig_imag_2                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_102                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_103                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_6                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_104                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_105                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p103tmp_add_cast                 : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p103tmp_add_cast_1               : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p103tmp_add_temp                 : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL sig_imag_3                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_imag_4                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_106                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_7                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_107                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_108                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p113tmp_add_cast                 : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p113tmp_add_cast_1               : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p113tmp_add_temp                 : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL sig_imag_5                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_109                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_imag_6                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_110                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_111                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_imag_7                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_112                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL foutimag1_2                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0foutimag1_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_113                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_114                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutimag1_3                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_115                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutreal2_1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_116                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_117                          : std_logic;
  SIGNAL foutreal2_2                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL p0foutreal2_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_118                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_119                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutreal2_3                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_120                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutimag2_1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_121                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_122                          : std_logic;
  SIGNAL foutimag2_2                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL p0foutimag2_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_123                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_124                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutimag2_3                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_125                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutreal3_1                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_126                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_127                          : std_logic;
  SIGNAL foutreal3_2                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0foutreal3_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_128                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_129                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutreal3_3                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_130                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutimag3_1                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_131                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_132                          : std_logic;
  SIGNAL foutimag3_2                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0foutimag3_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_133                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_134                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutimag3_3                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_135                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutreal4_1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_136                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_137                          : std_logic;
  SIGNAL foutreal4_2                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL p0foutreal4_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_138                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_139                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutreal4_3                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_140                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutimag4_1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_141                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_142                          : std_logic;
  SIGNAL foutimag4_2                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL p0foutimag4_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_143                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_144                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutimag4_3                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_145                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL fout_ready_1                     : std_logic;
  SIGNAL tmp_146                          : std_logic;
  SIGNAL tmp_147                          : std_logic;
  SIGNAL fout_ready_2                     : std_logic;
  SIGNAL tmp_148                          : std_logic;
  SIGNAL tmp_149                          : std_logic;
  SIGNAL fout_ready_3                     : std_logic;
  SIGNAL tmp_150                          : std_logic;

BEGIN
  -- 'cal_process_fixpt:14' drift = fi(drift_1, 0, 32, 46, fm);
  -- 
  -- 'cal_process_fixpt:13' fm = get_fimath();
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  --                                                                          %
  -- 
  --          Generated by MATLAB 9.12 and Fixed-Point Designer 7.4           %
  -- 
  --                                                                          %
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  drift_1_unsigned <= unsigned(drift_1);

  tmp <= to_unsigned(0, 32);

  tmp_1 <= (OTHERS => to_signed(0, 32));

  -- 'cal_process_fixpt:111' top(:) = zeros(1,4);
  -- 
  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp53_trueregionp1
  tmp_2 <= (OTHERS => to_signed(0, 32));

  enb <= clk_enable;

  drift_SD1_signed <= signed(drift_SD1);

  drift_SD2_signed <= signed(drift_SD2);

  drift_SD3_signed <= signed(drift_SD3);

  drift_SD4_signed <= signed(drift_SD4);

  -- 'cal_process_fixpt:42' FD(2) = FD(2) + drift_FD2;
  -- 
  -- 'cal_process_fixpt:43' SD(2) = SD(2) + drift_SD2;
  -- 
  -- 'cal_process_fixpt:44' FD(3) = FD(3) + drift_FD3;
  -- 
  -- 'cal_process_fixpt:45' SD(3) = SD(3) + drift_SD3;
  -- 
  -- 'cal_process_fixpt:46' FD(4) = FD(4) + drift_FD4;
  -- 
  -- 'cal_process_fixpt:47' SD(4) = SD(4) + drift_SD4;
  -- 
  -- 'cal_process_fixpt:49' top(1) = top(1) + powertop1;
  p148tmp_add_cast <= resize(SD(0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 41);
  p148tmp_add_cast_1 <= resize(drift_SD1_signed, 41);
  p148tmp_add_temp <= p148tmp_add_cast + p148tmp_add_cast_1;
  tmp_3 <= p148tmp_add_temp(39 DOWNTO 8);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp125
  p3SD_output : PROCESS (SD, tmp_3)
  BEGIN
    SD_1 <= SD;
    SD_1(0) <= tmp_3;
  END PROCESS p3SD_output;


  p2SD_output : PROCESS (SD_1, drift_SD2_signed)
    VARIABLE add_cast : signed(43 DOWNTO 0);
    VARIABLE add_cast_0 : signed(43 DOWNTO 0);
    VARIABLE add_temp : signed(43 DOWNTO 0);
  BEGIN
    SD_2 <= SD_1;
    add_cast := resize(SD_1(1) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 44);
    add_cast_0 := resize(drift_SD2_signed, 44);
    add_temp := add_cast + add_cast_0;
    SD_2(1) <= add_temp(42 DOWNTO 11);
  END PROCESS p2SD_output;


  p1SD_output : PROCESS (SD_2, drift_SD3_signed)
    VARIABLE add_cast1 : signed(40 DOWNTO 0);
    VARIABLE add_cast_01 : signed(40 DOWNTO 0);
    VARIABLE add_temp1 : signed(40 DOWNTO 0);
  BEGIN
    SD_3 <= SD_2;
    add_cast1 := resize(SD_2(2) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 41);
    add_cast_01 := resize(drift_SD3_signed, 41);
    add_temp1 := add_cast1 + add_cast_01;
    SD_3(2) <= add_temp1(39 DOWNTO 8);
  END PROCESS p1SD_output;


  p0SD_output : PROCESS (SD_3, drift_SD4_signed)
    VARIABLE add_cast2 : signed(43 DOWNTO 0);
    VARIABLE add_cast_02 : signed(43 DOWNTO 0);
    VARIABLE add_temp2 : signed(43 DOWNTO 0);
  BEGIN
    SD_4 <= SD_3;
    add_cast2 := resize(SD_3(3) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 44);
    add_cast_02 := resize(drift_SD4_signed, 44);
    add_temp2 := add_cast2 + add_cast_02;
    SD_4(3) <= add_temp2(42 DOWNTO 11);
  END PROCESS p0SD_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp53
  
  tmp_5 <= tmp_4 WHEN update_drift = '0' ELSE
      tmp_2;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp16
  
  tmp_6 <= tmp_1 WHEN readyout = '0' ELSE
      tmp_5;

  
  tmp_7 <= tmp_4 WHEN readyout = '0' ELSE
      tmp_6;

  SD_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      SD <= (OTHERS => to_signed(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        SD <= tmp_7;
      END IF;
    END IF;
  END PROCESS SD_reg_process;


  
  tmp_4 <= SD WHEN readyout = '0' ELSE
      SD_4;

  tmp_8 <= (OTHERS => to_unsigned(0, 32));

  -- 'cal_process_fixpt:113' Nac2(:) = Nac2+fi(1, 0, 1, 0, fm);
  -- 
  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp49_trueregionp1
  tmp_9 <= (OTHERS => to_unsigned(0, 32));

  powerbot1_unsigned <= unsigned(powerbot1);

  powerbot2_unsigned <= unsigned(powerbot2);

  powerbot3_unsigned <= unsigned(powerbot3);

  powerbot4_unsigned <= unsigned(powerbot4);

  -- 'cal_process_fixpt:51' top(2) = top(2) + powertop2;
  -- 
  -- 'cal_process_fixpt:52' bot(2) = bot(2) + powerbot2;
  -- 
  -- 'cal_process_fixpt:53' top(3) = top(3) + powertop3;
  -- 
  -- 'cal_process_fixpt:54' bot(3) = bot(3) + powerbot3;
  -- 
  -- 'cal_process_fixpt:55' top(4) = top(4) + powertop4;
  -- 
  -- 'cal_process_fixpt:56' bot(4) = bot(4) + powerbot4;
  -- 
  -- 'cal_process_fixpt:58' sig_real(1,calbin) = sig_real(1,calbin)+outreal1;
  p150tmp_add_cast <= resize(bot(0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 51);
  p150tmp_add_cast_1 <= resize(powerbot1_unsigned, 51);
  p150tmp_add_temp <= p150tmp_add_cast + p150tmp_add_cast_1;
  tmp_10 <= p150tmp_add_temp(49 DOWNTO 18);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp121
  p3bot_output : PROCESS (bot, tmp_10)
  BEGIN
    bot_1 <= bot;
    bot_1(0) <= tmp_10;
  END PROCESS p3bot_output;


  p2bot_output : PROCESS (bot_1, powerbot2_unsigned)
    VARIABLE add_cast3 : unsigned(38 DOWNTO 0);
    VARIABLE add_cast_03 : unsigned(38 DOWNTO 0);
    VARIABLE add_temp3 : unsigned(38 DOWNTO 0);
  BEGIN
    bot_2 <= bot_1;
    add_cast3 := resize(bot_1(1) & '0' & '0' & '0' & '0' & '0' & '0', 39);
    add_cast_03 := resize(powerbot2_unsigned, 39);
    add_temp3 := add_cast3 + add_cast_03;
    bot_2(1) <= add_temp3(37 DOWNTO 6);
  END PROCESS p2bot_output;


  p1bot_output : PROCESS (bot_2, powerbot3_unsigned)
    VARIABLE add_cast4 : unsigned(50 DOWNTO 0);
    VARIABLE add_cast_04 : unsigned(50 DOWNTO 0);
    VARIABLE add_temp4 : unsigned(50 DOWNTO 0);
  BEGIN
    bot_3 <= bot_2;
    add_cast4 := resize(bot_2(2) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 51);
    add_cast_04 := resize(powerbot3_unsigned, 51);
    add_temp4 := add_cast4 + add_cast_04;
    bot_3(2) <= add_temp4(49 DOWNTO 18);
  END PROCESS p1bot_output;


  p0bot_output : PROCESS (bot_3, powerbot4_unsigned)
    VARIABLE add_cast5 : unsigned(38 DOWNTO 0);
    VARIABLE add_cast_05 : unsigned(38 DOWNTO 0);
    VARIABLE add_temp5 : unsigned(38 DOWNTO 0);
  BEGIN
    bot_4 <= bot_3;
    add_cast5 := resize(bot_3(3) & '0' & '0' & '0' & '0' & '0' & '0', 39);
    add_cast_05 := resize(powerbot4_unsigned, 39);
    add_temp5 := add_cast5 + add_cast_05;
    bot_4(3) <= add_temp5(37 DOWNTO 6);
  END PROCESS p0bot_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp49
  
  tmp_12 <= tmp_11 WHEN update_drift = '0' ELSE
      tmp_9;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp10
  
  tmp_13 <= tmp_8 WHEN readyout = '0' ELSE
      tmp_12;

  
  tmp_14 <= tmp_11 WHEN readyout = '0' ELSE
      tmp_13;

  bot_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      bot <= (OTHERS => to_unsigned(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        bot <= tmp_14;
      END IF;
    END IF;
  END PROCESS bot_reg_process;


  
  tmp_11 <= bot WHEN readyout = '0' ELSE
      bot_4;

  tmp_15 <= (OTHERS => to_unsigned(0, 32));

  -- 'cal_process_fixpt:112' bot(:) = zeros(1,4);
  -- 
  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp51_trueregionp1
  tmp_16 <= (OTHERS => to_unsigned(0, 32));

  powertop1_unsigned <= unsigned(powertop1);

  powertop2_unsigned <= unsigned(powertop2);

  powertop3_unsigned <= unsigned(powertop3);

  powertop4_unsigned <= unsigned(powertop4);

  -- 'cal_process_fixpt:50' bot(1) = bot(1) + powerbot1;
  p149tmp_add_cast <= resize(top(0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 42);
  p149tmp_add_cast_1 <= resize(powertop1_unsigned, 42);
  p149tmp_add_temp <= p149tmp_add_cast + p149tmp_add_cast_1;
  tmp_17 <= p149tmp_add_temp(40 DOWNTO 9);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp123
  p3top_output : PROCESS (tmp_17, top)
  BEGIN
    top_1 <= top;
    top_1(0) <= tmp_17;
  END PROCESS p3top_output;


  p2top_output : PROCESS (powertop2_unsigned, top_1)
    VARIABLE add_cast6 : unsigned(44 DOWNTO 0);
    VARIABLE add_cast_06 : unsigned(44 DOWNTO 0);
    VARIABLE add_temp6 : unsigned(44 DOWNTO 0);
  BEGIN
    top_2 <= top_1;
    add_cast6 := resize(top_1(1) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 45);
    add_cast_06 := resize(powertop2_unsigned, 45);
    add_temp6 := add_cast6 + add_cast_06;
    top_2(1) <= add_temp6(43 DOWNTO 12);
  END PROCESS p2top_output;


  p1top_output : PROCESS (powertop3_unsigned, top_2)
    VARIABLE add_cast7 : unsigned(41 DOWNTO 0);
    VARIABLE add_cast_07 : unsigned(41 DOWNTO 0);
    VARIABLE add_temp7 : unsigned(41 DOWNTO 0);
  BEGIN
    top_3 <= top_2;
    add_cast7 := resize(top_2(2) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 42);
    add_cast_07 := resize(powertop3_unsigned, 42);
    add_temp7 := add_cast7 + add_cast_07;
    top_3(2) <= add_temp7(40 DOWNTO 9);
  END PROCESS p1top_output;


  p0top_output : PROCESS (powertop4_unsigned, top_3)
    VARIABLE add_cast8 : unsigned(44 DOWNTO 0);
    VARIABLE add_cast_08 : unsigned(44 DOWNTO 0);
    VARIABLE add_temp8 : unsigned(44 DOWNTO 0);
  BEGIN
    top_4 <= top_3;
    add_cast8 := resize(top_3(3) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 45);
    add_cast_08 := resize(powertop4_unsigned, 45);
    add_temp8 := add_cast8 + add_cast_08;
    top_4(3) <= add_temp8(43 DOWNTO 12);
  END PROCESS p0top_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp51
  
  tmp_19 <= tmp_18 WHEN update_drift = '0' ELSE
      tmp_16;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp13
  
  tmp_20 <= tmp_15 WHEN readyout = '0' ELSE
      tmp_19;

  
  tmp_21 <= tmp_18 WHEN readyout = '0' ELSE
      tmp_20;

  top_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      top <= (OTHERS => to_unsigned(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        top <= tmp_21;
      END IF;
    END IF;
  END PROCESS top_reg_process;


  
  tmp_18 <= top WHEN readyout = '0' ELSE
      top_4;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp57_trueregionp1
  p11_output : PROCESS (tmp_11, tmp_18, tmp_4)
    VARIABLE SDX : signed(31 DOWNTO 0);
    VARIABLE tmp22 : unsigned(63 DOWNTO 0);
    VARIABLE tmp_0 : unsigned(63 DOWNTO 0);
    VARIABLE sdx_0 : signed(31 DOWNTO 0);
    VARIABLE t_0 : vector_of_unsigned32(0 TO 3);
    VARIABLE div_temp : vector_of_unsigned62(0 TO 3);
    VARIABLE cast : vector_of_unsigned62(0 TO 3);
    VARIABLE cast_0 : vector_of_unsigned32(0 TO 3);
    VARIABLE add_cast9 : vector_of_signed34(0 TO 3);
    VARIABLE add_cast_09 : vector_of_signed34(0 TO 3);
    VARIABLE add_temp9 : vector_of_signed34(0 TO 3);
  BEGIN
    sdx_0 := to_signed(0, 32);
    tmp_0 := to_unsigned(0, 64);
    tmp22 := to_unsigned(0, 64);
    SDX := to_signed(0, 32);

    FOR i IN 0 TO 3 LOOP
      tmp22 := unsigned'(X"FFFFFFFFFFFFFFFF");
      IF tmp_11(hdl_sim_index_check(i, 0, 3)) = to_unsigned(0, 32) THEN 
        tmp_0 := tmp22;
      ELSE 
        t_0(hdl_sim_index_check(i, 0, 3)) := tmp_11(hdl_sim_index_check(i, 0, 3));
        cast(hdl_sim_index_check(i, 0, 3)) := tmp_18(hdl_sim_index_check(i, 0, 3)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        IF t_0(hdl_sim_index_check(i, 0, 3)) = 0 THEN 
          div_temp(hdl_sim_index_check(i, 0, 3)) := C_divbyzero_p;
        ELSE 
          div_temp(hdl_sim_index_check(i, 0, 3)) := cast(hdl_sim_index_check(i, 0, 3)) / t_0(hdl_sim_index_check(i, 0, 3));
        END IF;
        tmp_0 := resize(div_temp(hdl_sim_index_check(i, 0, 3)), 64);
      END IF;
      cast_0(hdl_sim_index_check(i, 0, 3)) := tmp_0(52 DOWNTO 21);
      IF cast_0(hdl_sim_index_check(i, 0, 3)) > to_unsigned(80, 32) THEN 
        add_cast9(hdl_sim_index_check(i, 0, 3)) := resize(SDX & '0', 34);
        add_cast_09(hdl_sim_index_check(i, 0, 3)) := resize(tmp_4(hdl_sim_index_check(i, 0, 3)), 34);
        add_temp9(hdl_sim_index_check(i, 0, 3)) := add_cast9(hdl_sim_index_check(i, 0, 3)) + add_cast_09(hdl_sim_index_check(i, 0, 3));
        sdx_0 := add_temp9(hdl_sim_index_check(i, 0, 3))(32 DOWNTO 1);
      ELSE 
        sdx_0 := SDX;
      END IF;
      SDX := sdx_0;
    END LOOP;

    SDX_1 <= SDX;
  END PROCESS p11_output;


  
  tmp_23 <= '1' WHEN SDX_1 = to_signed(0, 32) ELSE
      '0';

  tmp_24 <= (OTHERS => to_signed(0, 32));

  -- 'cal_process_fixpt:110' SD(:) = zeros(1,4);
  -- 
  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp55_trueregionp1
  tmp_25 <= (OTHERS => to_signed(0, 32));

  drift_FD1_signed <= signed(drift_FD1);

  drift_FD2_signed <= signed(drift_FD2);

  drift_FD3_signed <= signed(drift_FD3);

  drift_FD4_signed <= signed(drift_FD4);

  -- 'cal_process_fixpt:41' SD(1) = SD(1) + drift_SD1;
  p147tmp_add_cast <= resize(FD(0) & '0' & '0' & '0' & '0' & '0' & '0' & '0', 40);
  p147tmp_add_cast_1 <= resize(drift_FD1_signed, 40);
  p147tmp_add_temp <= p147tmp_add_cast + p147tmp_add_cast_1;
  tmp_26 <= p147tmp_add_temp(38 DOWNTO 7);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp127
  p3FD_output : PROCESS (FD, tmp_26)
  BEGIN
    FD_1 <= FD;
    FD_1(0) <= tmp_26;
  END PROCESS p3FD_output;


  p2FD_output : PROCESS (FD_1, drift_FD2_signed)
    VARIABLE add_cast10 : signed(41 DOWNTO 0);
    VARIABLE add_cast_010 : signed(41 DOWNTO 0);
    VARIABLE add_temp10 : signed(41 DOWNTO 0);
  BEGIN
    FD_2 <= FD_1;
    add_cast10 := resize(FD_1(1) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 42);
    add_cast_010 := resize(drift_FD2_signed, 42);
    add_temp10 := add_cast10 + add_cast_010;
    FD_2(1) <= add_temp10(40 DOWNTO 9);
  END PROCESS p2FD_output;


  p1FD_output : PROCESS (FD_2, drift_FD3_signed)
    VARIABLE add_cast11 : signed(39 DOWNTO 0);
    VARIABLE add_cast_011 : signed(39 DOWNTO 0);
    VARIABLE add_temp11 : signed(39 DOWNTO 0);
  BEGIN
    FD_3 <= FD_2;
    add_cast11 := resize(FD_2(2) & '0' & '0' & '0' & '0' & '0' & '0' & '0', 40);
    add_cast_011 := resize(drift_FD3_signed, 40);
    add_temp11 := add_cast11 + add_cast_011;
    FD_3(2) <= add_temp11(38 DOWNTO 7);
  END PROCESS p1FD_output;


  p0FD_output : PROCESS (FD_3, drift_FD4_signed)
    VARIABLE add_cast12 : signed(41 DOWNTO 0);
    VARIABLE add_cast_012 : signed(41 DOWNTO 0);
    VARIABLE add_temp12 : signed(41 DOWNTO 0);
  BEGIN
    FD_4 <= FD_3;
    add_cast12 := resize(FD_3(3) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 42);
    add_cast_012 := resize(drift_FD4_signed, 42);
    add_temp12 := add_cast12 + add_cast_012;
    FD_4(3) <= add_temp12(40 DOWNTO 9);
  END PROCESS p0FD_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp55
  
  tmp_28 <= tmp_27 WHEN update_drift = '0' ELSE
      tmp_25;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp19
  
  tmp_29 <= tmp_24 WHEN readyout = '0' ELSE
      tmp_28;

  
  tmp_30 <= tmp_27 WHEN readyout = '0' ELSE
      tmp_29;

  FD_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      FD <= (OTHERS => to_signed(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        FD <= tmp_30;
      END IF;
    END IF;
  END PROCESS FD_reg_process;


  -- 'cal_process_fixpt:39' if readyout
  
  tmp_27 <= FD WHEN readyout = '0' ELSE
      FD_4;

  p12_output : PROCESS (tmp_11, tmp_18, tmp_27)
    VARIABLE FDX : signed(31 DOWNTO 0);
    VARIABLE tmp31 : unsigned(63 DOWNTO 0);
    VARIABLE tmp_01 : unsigned(63 DOWNTO 0);
    VARIABLE fdx_0 : signed(31 DOWNTO 0);
    VARIABLE t_01 : vector_of_unsigned32(0 TO 3);
    VARIABLE div_temp1 : vector_of_unsigned62(0 TO 3);
    VARIABLE cast1 : vector_of_unsigned62(0 TO 3);
    VARIABLE cast_01 : vector_of_unsigned32(0 TO 3);
    VARIABLE add_cast13 : vector_of_signed34(0 TO 3);
    VARIABLE add_cast_013 : vector_of_signed34(0 TO 3);
    VARIABLE add_temp13 : vector_of_signed34(0 TO 3);
  BEGIN
    fdx_0 := to_signed(0, 32);
    tmp_01 := to_unsigned(0, 64);
    tmp31 := to_unsigned(0, 64);
    FDX := to_signed(0, 32);

    FOR i1 IN 0 TO 3 LOOP
      tmp31 := unsigned'(X"FFFFFFFFFFFFFFFF");
      IF tmp_11(hdl_sim_index_check(i1, 0, 3)) = to_unsigned(0, 32) THEN 
        tmp_01 := tmp31;
      ELSE 
        t_01(hdl_sim_index_check(i1, 0, 3)) := tmp_11(hdl_sim_index_check(i1, 0, 3));
        cast1(hdl_sim_index_check(i1, 0, 3)) := tmp_18(hdl_sim_index_check(i1, 0, 3)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        IF t_01(hdl_sim_index_check(i1, 0, 3)) = 0 THEN 
          div_temp1(hdl_sim_index_check(i1, 0, 3)) := C_divbyzero_p_2;
        ELSE 
          div_temp1(hdl_sim_index_check(i1, 0, 3)) := cast1(hdl_sim_index_check(i1, 0, 3)) / t_01(hdl_sim_index_check(i1, 0, 3));
        END IF;
        tmp_01 := resize(div_temp1(hdl_sim_index_check(i1, 0, 3)), 64);
      END IF;
      cast_01(hdl_sim_index_check(i1, 0, 3)) := tmp_01(52 DOWNTO 21);
      IF cast_01(hdl_sim_index_check(i1, 0, 3)) > to_unsigned(80, 32) THEN 
        add_cast13(hdl_sim_index_check(i1, 0, 3)) := resize(FDX & '0', 34);
        add_cast_013(hdl_sim_index_check(i1, 0, 3)) := resize(tmp_27(hdl_sim_index_check(i1, 0, 3)), 34);
        add_temp13(hdl_sim_index_check(i1, 0, 3)) := add_cast13(hdl_sim_index_check(i1, 0, 3)) + add_cast_013(hdl_sim_index_check(i1, 0, 3));
        fdx_0 := add_temp13(hdl_sim_index_check(i1, 0, 3))(32 DOWNTO 1);
      ELSE 
        fdx_0 := FDX;
      END IF;
      FDX := fdx_0;
    END LOOP;

    FDX_1 <= FDX;
  END PROCESS p12_output;


  
  tmp_32 <= '1' WHEN FDX_1 < to_signed(0, 32) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp57_trueregionp1_falseregionp6
  varargout_1 <= signed'(X"7FFFFFFFFFFFFFFF");

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp57_trueregionp1_falseregionp1
  p0varargout_1_slice_cast <= FDX_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  p0varargout_1_slice_cast_1 <= C_divbyzero_p_4 WHEN p0varargout_1_slice_cast(38) = SDX_1(31) ELSE
      C_divbyzero_n;
  p0varargout_1_cast <= FDX_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  p0varargout_1_div_temp <= p0varargout_1_slice_cast_1 WHEN SDX_1 = 0 ELSE
      p0varargout_1_cast / SDX_1;
  varargout_1_1 <= resize(p0varargout_1_div_temp, 64);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp57_trueregionp1_trueregionp6
  varargout_1_2 <= signed'(X"8000000000000000");

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp57_trueregionp1_trueregionp1
  
  tmp_33 <= varargout_1 WHEN tmp_32 = '0' ELSE
      varargout_1_2;

  
  tmp_34 <= varargout_1_1 WHEN tmp_23 = '0' ELSE
      tmp_33;

  p0drift_add_cast <= signed(resize(drift_1_unsigned, 88));
  p0drift_add_cast_1 <= resize(tmp_34 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 88);
  p0drift_add_temp <= p0drift_add_cast + p0drift_add_cast_1;
  drift_2 <= unsigned(p0drift_add_temp(31 DOWNTO 0));

  
  tmp_35 <= drift_1_unsigned WHEN update_drift = '0' ELSE
      drift_2;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp21
  
  tmp_36 <= tmp WHEN readyout = '0' ELSE
      tmp_35;

  
  tmp_37 <= drift_1_unsigned WHEN readyout = '0' ELSE
      tmp_36;

  drift <= std_logic_vector(tmp_37);

  -- 'cal_process_fixpt:29' foutreal1 = fi(0, 1, 32, 20, fm);
  -- 
  -- 'cal_process_fixpt:18' if isempty(FD)
  foutreal1_1 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt
  tmp_38 <= to_signed(0, 32);

  tmp_39 <= to_unsigned(16#0#, 4);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp169
  Nac2 <= to_unsigned(16#1#, 4);

  -- 'cal_process_fixpt:114' if Nac2>fi(10, 0, 4, 0, fm)
  -- 
  -- 'cal_process_fixpt:115' Nac2(:) = 1;
  Nac2_2 <= Nac2_1 + to_unsigned(16#1#, 4);

  
  tmp_40 <= '1' WHEN Nac2_2 > to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp47_trueregionp1
  
  tmp_41 <= Nac2_2 WHEN tmp_40 = '0' ELSE
      Nac2;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp47
  
  tmp_42 <= Nac2_1 WHEN update_drift = '0' ELSE
      tmp_41;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp7
  
  tmp_43 <= tmp_39 WHEN readyout = '0' ELSE
      tmp_42;

  
  tmp_44 <= Nac2_1 WHEN readyout = '0' ELSE
      tmp_43;

  Nac2_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Nac2_1 <= to_unsigned(16#1#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Nac2_1 <= tmp_44;
      END IF;
    END IF;
  END PROCESS Nac2_reg_process;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp79
  
  tmp_45 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  sig_real <= (OTHERS => to_signed(0, 32));

  tmp_46 <= (OTHERS => to_signed(0, 32));

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp63
  
  tmp_47 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  tmp_48 <= (OTHERS => to_signed(0, 32));

  calbin_unsigned <= unsigned(calbin);

  -- 'cal_process_fixpt:81' sig_imag (:,calbin) = zeros(4,1);
  p160tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_49 <= p160tmp_sub_cast - 1;

  tmp_50 <= to_signed(0, 32);

  outreal1_signed <= signed(outreal1);

  -- 'cal_process_fixpt:59' sig_imag(1,calbin) = sig_imag(1,calbin)+outimag1;
  p151tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_51 <= p151tmp_sub_cast - 1;

  tmp_52 <= to_signed(0, 32);

  outreal2_signed <= signed(outreal2);

  -- 'cal_process_fixpt:61' sig_imag(2,calbin) = sig_imag(2,calbin)+outimag2;
  p153tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_53 <= p153tmp_sub_cast - 1;

  tmp_54 <= to_signed(0, 32);

  outreal3_signed <= signed(outreal3);

  -- 'cal_process_fixpt:63' sig_imag(3,calbin) = sig_imag(3,calbin)+outimag3;
  p155tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_55 <= p155tmp_sub_cast - 1;

  tmp_56 <= to_signed(0, 32);

  outreal4_signed <= signed(outreal4);

  -- 'cal_process_fixpt:65' sig_imag(4,calbin) = sig_imag(4,calbin)+outimag4;
  p157tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_57 <= p157tmp_sub_cast - 1;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp89
  p0tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_59 <= tmp_58(hdl_sim_index_check(to_integer(3 + resize(4 * (p0tmp_sub_cast - 1), 32)), 0, 2047));

  
  tmp_60 <= tmp_56 WHEN readyout = '0' ELSE
      tmp_59;

  p88tmp_add_cast <= resize(tmp_60 & '0' & '0' & '0' & '0' & '0', 38);
  p88tmp_add_cast_1 <= resize(outreal4_signed, 38);
  p88tmp_add_temp <= p88tmp_add_cast + p88tmp_add_cast_1;
  tmp_61 <= p88tmp_add_temp(36 DOWNTO 5);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp86
  p0sig_real_output : PROCESS (tmp_57, tmp_58, tmp_61)
    VARIABLE add_cast14 : signed(63 DOWNTO 0);
  BEGIN
    sig_real_1 <= tmp_58;
    add_cast14 := resize(tmp_57 & '0' & '0', 64);
    sig_real_1(hdl_sim_index_check(to_integer(3 + resize(add_cast14, 32)), 0, 2047)) <= tmp_61;
  END PROCESS p0sig_real_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp99
  p0tmp_sub_cast_1 <= signed(resize(calbin_unsigned, 32));
  tmp_63 <= tmp_62(hdl_sim_index_check(to_integer(2 + resize(4 * (p0tmp_sub_cast_1 - 1), 32)), 0, 2047));

  
  tmp_64 <= tmp_54 WHEN readyout = '0' ELSE
      tmp_63;

  p98tmp_add_cast <= resize(tmp_64 & '0' & '0' & '0' & '0', 37);
  p98tmp_add_cast_1 <= resize(outreal3_signed, 37);
  p98tmp_add_temp <= p98tmp_add_cast + p98tmp_add_cast_1;
  tmp_65 <= p98tmp_add_temp(35 DOWNTO 4);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp96
  p0sig_real_1_output : PROCESS (tmp_55, tmp_62, tmp_65)
    VARIABLE add_cast15 : signed(63 DOWNTO 0);
  BEGIN
    sig_real_2 <= tmp_62;
    add_cast15 := resize(tmp_55 & '0' & '0', 64);
    sig_real_2(hdl_sim_index_check(to_integer(2 + resize(add_cast15, 32)), 0, 2047)) <= tmp_65;
  END PROCESS p0sig_real_1_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp109
  p0tmp_sub_cast_2 <= signed(resize(calbin_unsigned, 32));
  tmp_67 <= tmp_66(hdl_sim_index_check(to_integer(1 + resize(4 * (p0tmp_sub_cast_2 - 1), 32)), 0, 2047));

  
  tmp_68 <= tmp_52 WHEN readyout = '0' ELSE
      tmp_67;

  p108tmp_add_cast <= resize(tmp_68 & '0' & '0' & '0' & '0' & '0', 38);
  p108tmp_add_cast_1 <= resize(outreal2_signed, 38);
  p108tmp_add_temp <= p108tmp_add_cast + p108tmp_add_cast_1;
  tmp_69 <= p108tmp_add_temp(36 DOWNTO 5);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp106
  p0sig_real_2_output : PROCESS (tmp_53, tmp_66, tmp_69)
    VARIABLE add_cast16 : signed(63 DOWNTO 0);
  BEGIN
    sig_real_3 <= tmp_66;
    add_cast16 := resize(tmp_53 & '0' & '0', 64);
    sig_real_3(hdl_sim_index_check(to_integer(1 + resize(add_cast16, 32)), 0, 2047)) <= tmp_69;
  END PROCESS p0sig_real_2_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp119
  p0tmp_sub_cast_3 <= signed(resize(calbin_unsigned, 32));
  tmp_70 <= sig_real_4(hdl_sim_index_check(to_integer(resize(4 * (p0tmp_sub_cast_3 - 1), 31)), 0, 2047));

  
  tmp_71 <= tmp_50 WHEN readyout = '0' ELSE
      tmp_70;

  p118tmp_add_cast <= resize(tmp_71 & '0' & '0' & '0' & '0', 37);
  p118tmp_add_cast_1 <= resize(outreal1_signed, 37);
  p118tmp_add_temp <= p118tmp_add_cast + p118tmp_add_cast_1;
  tmp_72 <= p118tmp_add_temp(35 DOWNTO 4);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp116
  p0sig_real_3_output : PROCESS (sig_real_4, tmp_51, tmp_72)
    VARIABLE cast2 : signed(63 DOWNTO 0);
  BEGIN
    sig_real_5 <= sig_real_4;
    cast2 := resize(tmp_51 & '0' & '0', 64);
    sig_real_5(hdl_sim_index_check(to_integer(resize(cast2, 31)), 0, 2047)) <= tmp_72;
  END PROCESS p0sig_real_3_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp63_trueregionp1
  p0sig_real_4_output : PROCESS (tmp_48, tmp_49, tmp_73)
    VARIABLE add_cast17 : vector_of_signed64(0 TO 3);
  BEGIN
    sig_real_6 <= tmp_73;

    FOR t_02 IN 0 TO 3 LOOP
      add_cast17(hdl_sim_index_check(t_02, 0, 3)) := resize(tmp_49 & '0' & '0', 64);
      sig_real_6(hdl_sim_index_check(to_integer(to_signed(t_02, 32) + resize(add_cast17(hdl_sim_index_check(t_02, 0, 3)), 32)), 0, 2047)) <= tmp_48(hdl_sim_index_check(t_02, 0, 3));
    END LOOP;

  END PROCESS p0sig_real_4_output;


  
  tmp_74 <= tmp_73 WHEN tmp_47 = '0' ELSE
      sig_real_6;

  
  tmp_75 <= tmp_46 WHEN readyout = '0' ELSE
      tmp_74;

  
  sig_real_7 <= tmp_75 WHEN readyout = '1' ELSE
      sig_real;

  
  tmp_76 <= sig_real_7 WHEN readyout = '1' ELSE
      tmp_73;

  sig_real_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sig_real_4 <= (OTHERS => to_signed(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sig_real_4 <= tmp_76;
      END IF;
    END IF;
  END PROCESS sig_real_reg_process;


  
  tmp_66 <= sig_real_4 WHEN readyout = '0' ELSE
      sig_real_5;

  
  tmp_62 <= tmp_66 WHEN readyout = '0' ELSE
      sig_real_3;

  
  tmp_58 <= tmp_62 WHEN readyout = '0' ELSE
      sig_real_2;

  
  tmp_73 <= tmp_58 WHEN readyout = '0' ELSE
      sig_real_1;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp79_trueregionp1
  p0foutreal1_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutreal1_2 <= tmp_73(hdl_sim_index_check(to_integer(resize(4 * (p0foutreal1_sub_cast - 1), 31)), 0, 2047));

  
  tmp_77 <= foutreal1_1 WHEN tmp_45 = '0' ELSE
      foutreal1_2;

  
  tmp_78 <= tmp_38 WHEN readyout = '0' ELSE
      tmp_77;

  
  foutreal1_3 <= tmp_78 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_79 <= foutreal1_3 WHEN readyout = '1' ELSE
      foutreal1_1;

  foutreal1 <= std_logic_vector(tmp_79);

  -- 'cal_process_fixpt:30' foutimag1 = fi(0, 1, 32, 20, fm);
  foutimag1_1 <= to_signed(0, 32);

  tmp_80 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp77
  
  tmp_81 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  sig_imag <= (OTHERS => to_signed(0, 32));

  tmp_82 <= (OTHERS => to_signed(0, 32));

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61
  
  tmp_83 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  tmp_84 <= (OTHERS => to_signed(0, 32));

  -- 'cal_process_fixpt:82' fout_ready(:) = true;
  -- 
  -- 'cal_process_fixpt:85' if (update_drift)
  -- 
  -- 'cal_process_fixpt:86' phase_drift_per_ppm = fi(50e3*4096/102.4e6 *(1/1e6)*2*pi, 0, 32, 48, fm);
  -- 
  -- 'cal_process_fixpt:87' alpha_to_pdrift = fi(fi(16, 0, 5, 0, fm)*phase_drift_per_ppm, 0, 32, 44, fm);
  -- 
  -- fprintf('cdrift = %f ->', drift/alpha_to_pdrift);
  -- 
  -- 'cal_process_fixpt:89' FDX = fi(0, 1, 32, -3, fm);
  p162tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_85 <= p162tmp_sub_cast - 1;

  tmp_86 <= to_signed(0, 32);

  outimag1_signed <= signed(outimag1);

  -- 'cal_process_fixpt:60' sig_real(2,calbin) = sig_real(2,calbin)+outreal2;
  p152tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_87 <= p152tmp_sub_cast - 1;

  tmp_88 <= to_signed(0, 32);

  outimag2_signed <= signed(outimag2);

  -- 'cal_process_fixpt:62' sig_real(3,calbin) = sig_real(3,calbin)+outreal3;
  p154tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_89 <= p154tmp_sub_cast - 1;

  tmp_90 <= to_signed(0, 32);

  outimag3_signed <= signed(outimag3);

  -- 'cal_process_fixpt:64' sig_real(4,calbin) = sig_real(4,calbin)+outreal4;
  p156tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_91 <= p156tmp_sub_cast - 1;

  -- 'cal_process_fixpt:40' FD(1) = FD(1) + drift_FD1;
  tmp_92 <= to_signed(0, 32);

  outimag4_signed <= signed(outimag4);

  -- 'cal_process_fixpt:67' if Nac2 == fi(10, 0, 4, 0, fm)
  -- 
  -- 'cal_process_fixpt:68' foutreal1(:) = sig_real(1,calbin);
  -- 
  -- if (calbin==3)
  -- 
  --    fprintf ("here %g \n", foutreal1);
  -- 
  -- end
  -- 
  -- 'cal_process_fixpt:73' foutimag1(:) = sig_imag(1,calbin);
  -- 
  -- 'cal_process_fixpt:74' foutreal2(:) = sig_real(2,calbin);
  -- 
  -- 'cal_process_fixpt:75' foutimag2(:) = sig_imag(2,calbin);
  -- 
  -- 'cal_process_fixpt:76' foutreal3(:) = sig_real(3,calbin);
  -- 
  -- 'cal_process_fixpt:77' foutimag3(:) = sig_imag(3,calbin);
  -- 
  -- 'cal_process_fixpt:78' foutreal4(:) = sig_real(4,calbin);
  -- 
  -- 'cal_process_fixpt:79' foutimag4(:) = sig_imag(4,calbin);
  -- 
  -- 'cal_process_fixpt:80' sig_real (:,calbin) = zeros(4,1);
  p158tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_93 <= p158tmp_sub_cast - 1;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp84
  p0tmp_sub_cast_4 <= signed(resize(calbin_unsigned, 32));
  tmp_95 <= tmp_94(hdl_sim_index_check(to_integer(3 + resize(4 * (p0tmp_sub_cast_4 - 1), 32)), 0, 2047));

  
  tmp_96 <= tmp_92 WHEN readyout = '0' ELSE
      tmp_95;

  p83tmp_add_cast <= resize(tmp_96 & '0' & '0' & '0' & '0' & '0', 38);
  p83tmp_add_cast_1 <= resize(outimag4_signed, 38);
  p83tmp_add_temp <= p83tmp_add_cast + p83tmp_add_cast_1;
  tmp_97 <= p83tmp_add_temp(36 DOWNTO 5);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp81
  p0sig_imag_output : PROCESS (tmp_93, tmp_94, tmp_97)
    VARIABLE add_cast18 : signed(63 DOWNTO 0);
  BEGIN
    sig_imag_1 <= tmp_94;
    add_cast18 := resize(tmp_93 & '0' & '0', 64);
    sig_imag_1(hdl_sim_index_check(to_integer(3 + resize(add_cast18, 32)), 0, 2047)) <= tmp_97;
  END PROCESS p0sig_imag_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp94
  p0tmp_sub_cast_5 <= signed(resize(calbin_unsigned, 32));
  tmp_99 <= tmp_98(hdl_sim_index_check(to_integer(2 + resize(4 * (p0tmp_sub_cast_5 - 1), 32)), 0, 2047));

  
  tmp_100 <= tmp_90 WHEN readyout = '0' ELSE
      tmp_99;

  p93tmp_add_cast <= resize(tmp_100 & '0' & '0' & '0' & '0', 37);
  p93tmp_add_cast_1 <= resize(outimag3_signed, 37);
  p93tmp_add_temp <= p93tmp_add_cast + p93tmp_add_cast_1;
  tmp_101 <= p93tmp_add_temp(35 DOWNTO 4);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp91
  p0sig_imag_1_output : PROCESS (tmp_101, tmp_91, tmp_98)
    VARIABLE add_cast19 : signed(63 DOWNTO 0);
  BEGIN
    sig_imag_2 <= tmp_98;
    add_cast19 := resize(tmp_91 & '0' & '0', 64);
    sig_imag_2(hdl_sim_index_check(to_integer(2 + resize(add_cast19, 32)), 0, 2047)) <= tmp_101;
  END PROCESS p0sig_imag_1_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp104
  p0tmp_sub_cast_6 <= signed(resize(calbin_unsigned, 32));
  tmp_103 <= tmp_102(hdl_sim_index_check(to_integer(1 + resize(4 * (p0tmp_sub_cast_6 - 1), 32)), 0, 2047));

  
  tmp_104 <= tmp_88 WHEN readyout = '0' ELSE
      tmp_103;

  p103tmp_add_cast <= resize(tmp_104 & '0' & '0' & '0' & '0' & '0', 38);
  p103tmp_add_cast_1 <= resize(outimag2_signed, 38);
  p103tmp_add_temp <= p103tmp_add_cast + p103tmp_add_cast_1;
  tmp_105 <= p103tmp_add_temp(36 DOWNTO 5);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp101
  p0sig_imag_2_output : PROCESS (tmp_102, tmp_105, tmp_89)
    VARIABLE add_cast20 : signed(63 DOWNTO 0);
  BEGIN
    sig_imag_3 <= tmp_102;
    add_cast20 := resize(tmp_89 & '0' & '0', 64);
    sig_imag_3(hdl_sim_index_check(to_integer(1 + resize(add_cast20, 32)), 0, 2047)) <= tmp_105;
  END PROCESS p0sig_imag_2_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp114
  p0tmp_sub_cast_7 <= signed(resize(calbin_unsigned, 32));
  tmp_106 <= sig_imag_4(hdl_sim_index_check(to_integer(resize(4 * (p0tmp_sub_cast_7 - 1), 31)), 0, 2047));

  
  tmp_107 <= tmp_86 WHEN readyout = '0' ELSE
      tmp_106;

  p113tmp_add_cast <= resize(tmp_107 & '0' & '0' & '0' & '0', 37);
  p113tmp_add_cast_1 <= resize(outimag1_signed, 37);
  p113tmp_add_temp <= p113tmp_add_cast + p113tmp_add_cast_1;
  tmp_108 <= p113tmp_add_temp(35 DOWNTO 4);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp111
  p0sig_imag_3_output : PROCESS (sig_imag_4, tmp_108, tmp_87)
    VARIABLE cast3 : signed(63 DOWNTO 0);
  BEGIN
    sig_imag_5 <= sig_imag_4;
    cast3 := resize(tmp_87 & '0' & '0', 64);
    sig_imag_5(hdl_sim_index_check(to_integer(resize(cast3, 31)), 0, 2047)) <= tmp_108;
  END PROCESS p0sig_imag_3_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61_trueregionp1
  p0sig_imag_4_output : PROCESS (tmp_109, tmp_84, tmp_85)
    VARIABLE add_cast21 : vector_of_signed64(0 TO 3);
  BEGIN
    sig_imag_6 <= tmp_109;

    FOR t_03 IN 0 TO 3 LOOP
      add_cast21(hdl_sim_index_check(t_03, 0, 3)) := resize(tmp_85 & '0' & '0', 64);
      sig_imag_6(hdl_sim_index_check(to_integer(to_signed(t_03, 32) + resize(add_cast21(hdl_sim_index_check(t_03, 0, 3)), 32)), 0, 2047)) <= tmp_84(hdl_sim_index_check(t_03, 0, 3));
    END LOOP;

  END PROCESS p0sig_imag_4_output;


  
  tmp_110 <= tmp_109 WHEN tmp_83 = '0' ELSE
      sig_imag_6;

  
  tmp_111 <= tmp_82 WHEN readyout = '0' ELSE
      tmp_110;

  
  sig_imag_7 <= tmp_111 WHEN readyout = '1' ELSE
      sig_imag;

  
  tmp_112 <= sig_imag_7 WHEN readyout = '1' ELSE
      tmp_109;

  sig_imag_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sig_imag_4 <= (OTHERS => to_signed(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sig_imag_4 <= tmp_112;
      END IF;
    END IF;
  END PROCESS sig_imag_reg_process;


  
  tmp_102 <= sig_imag_4 WHEN readyout = '0' ELSE
      sig_imag_5;

  
  tmp_98 <= tmp_102 WHEN readyout = '0' ELSE
      sig_imag_3;

  
  tmp_94 <= tmp_98 WHEN readyout = '0' ELSE
      sig_imag_2;

  
  tmp_109 <= tmp_94 WHEN readyout = '0' ELSE
      sig_imag_1;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp77_trueregionp1
  p0foutimag1_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutimag1_2 <= tmp_109(hdl_sim_index_check(to_integer(resize(4 * (p0foutimag1_sub_cast - 1), 31)), 0, 2047));

  
  tmp_113 <= foutimag1_1 WHEN tmp_81 = '0' ELSE
      foutimag1_2;

  
  tmp_114 <= tmp_80 WHEN readyout = '0' ELSE
      tmp_113;

  
  foutimag1_3 <= tmp_114 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_115 <= foutimag1_3 WHEN readyout = '1' ELSE
      foutimag1_1;

  foutimag1 <= std_logic_vector(tmp_115);

  -- 'cal_process_fixpt:31' foutreal2 = fi(0, 1, 32, 24, fm);
  foutreal2_1 <= to_signed(0, 32);

  tmp_116 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp75
  
  tmp_117 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp75_trueregionp1
  p0foutreal2_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutreal2_2 <= tmp_73(hdl_sim_index_check(to_integer(1 + resize(4 * (p0foutreal2_sub_cast - 1), 32)), 0, 2047))(27 DOWNTO 0) & '0' & '0' & '0' & '0';

  
  tmp_118 <= foutreal2_1 WHEN tmp_117 = '0' ELSE
      foutreal2_2;

  
  tmp_119 <= tmp_116 WHEN readyout = '0' ELSE
      tmp_118;

  
  foutreal2_3 <= tmp_119 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_120 <= foutreal2_3 WHEN readyout = '1' ELSE
      foutreal2_1;

  foutreal2 <= std_logic_vector(tmp_120);

  -- 'cal_process_fixpt:32' foutimag2 = fi(0, 1, 32, 24, fm);
  foutimag2_1 <= to_signed(0, 32);

  tmp_121 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp73
  
  tmp_122 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp73_trueregionp1
  p0foutimag2_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutimag2_2 <= tmp_109(hdl_sim_index_check(to_integer(1 + resize(4 * (p0foutimag2_sub_cast - 1), 32)), 0, 2047))(27 DOWNTO 0) & '0' & '0' & '0' & '0';

  
  tmp_123 <= foutimag2_1 WHEN tmp_122 = '0' ELSE
      foutimag2_2;

  
  tmp_124 <= tmp_121 WHEN readyout = '0' ELSE
      tmp_123;

  
  foutimag2_3 <= tmp_124 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_125 <= foutimag2_3 WHEN readyout = '1' ELSE
      foutimag2_1;

  foutimag2 <= std_logic_vector(tmp_125);

  -- 'cal_process_fixpt:33' foutreal3 = fi(0, 1, 32, 20, fm);
  foutreal3_1 <= to_signed(0, 32);

  tmp_126 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp71
  
  tmp_127 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp71_trueregionp1
  p0foutreal3_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutreal3_2 <= tmp_73(hdl_sim_index_check(to_integer(2 + resize(4 * (p0foutreal3_sub_cast - 1), 32)), 0, 2047));

  
  tmp_128 <= foutreal3_1 WHEN tmp_127 = '0' ELSE
      foutreal3_2;

  
  tmp_129 <= tmp_126 WHEN readyout = '0' ELSE
      tmp_128;

  
  foutreal3_3 <= tmp_129 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_130 <= foutreal3_3 WHEN readyout = '1' ELSE
      foutreal3_1;

  foutreal3 <= std_logic_vector(tmp_130);

  -- 'cal_process_fixpt:34' foutimag3 = fi(0, 1, 32, 20, fm);
  foutimag3_1 <= to_signed(0, 32);

  tmp_131 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp69
  
  tmp_132 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp69_trueregionp1
  p0foutimag3_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutimag3_2 <= tmp_109(hdl_sim_index_check(to_integer(2 + resize(4 * (p0foutimag3_sub_cast - 1), 32)), 0, 2047));

  
  tmp_133 <= foutimag3_1 WHEN tmp_132 = '0' ELSE
      foutimag3_2;

  
  tmp_134 <= tmp_131 WHEN readyout = '0' ELSE
      tmp_133;

  
  foutimag3_3 <= tmp_134 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_135 <= foutimag3_3 WHEN readyout = '1' ELSE
      foutimag3_1;

  foutimag3 <= std_logic_vector(tmp_135);

  -- 'cal_process_fixpt:35' foutreal4 = fi(0, 1, 32, 24, fm);
  foutreal4_1 <= to_signed(0, 32);

  tmp_136 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp67
  
  tmp_137 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp67_trueregionp1
  p0foutreal4_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutreal4_2 <= tmp_73(hdl_sim_index_check(to_integer(3 + resize(4 * (p0foutreal4_sub_cast - 1), 32)), 0, 2047))(27 DOWNTO 0) & '0' & '0' & '0' & '0';

  
  tmp_138 <= foutreal4_1 WHEN tmp_137 = '0' ELSE
      foutreal4_2;

  
  tmp_139 <= tmp_136 WHEN readyout = '0' ELSE
      tmp_138;

  
  foutreal4_3 <= tmp_139 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_140 <= foutreal4_3 WHEN readyout = '1' ELSE
      foutreal4_1;

  foutreal4 <= std_logic_vector(tmp_140);

  -- 'cal_process_fixpt:36' foutimag4 = fi(0, 1, 32, 24, fm);
  foutimag4_1 <= to_signed(0, 32);

  tmp_141 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp65
  
  tmp_142 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp65_trueregionp1
  p0foutimag4_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutimag4_2 <= tmp_109(hdl_sim_index_check(to_integer(3 + resize(4 * (p0foutimag4_sub_cast - 1), 32)), 0, 2047))(27 DOWNTO 0) & '0' & '0' & '0' & '0';

  
  tmp_143 <= foutimag4_1 WHEN tmp_142 = '0' ELSE
      foutimag4_2;

  
  tmp_144 <= tmp_141 WHEN readyout = '0' ELSE
      tmp_143;

  
  foutimag4_3 <= tmp_144 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_145 <= foutimag4_3 WHEN readyout = '1' ELSE
      foutimag4_1;

  foutimag4 <= std_logic_vector(tmp_145);

  -- 'cal_process_fixpt:37' fout_ready = false;
  fout_ready_1 <= '0';

  tmp_146 <= '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp59
  
  tmp_147 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp59_trueregionp1
  fout_ready_2 <= '1';

  
  tmp_148 <= fout_ready_1 WHEN tmp_147 = '0' ELSE
      fout_ready_2;

  
  tmp_149 <= tmp_146 WHEN readyout = '0' ELSE
      tmp_148;

  
  fout_ready_3 <= tmp_149 WHEN readyout = '1' ELSE
      '0';

  
  tmp_150 <= fout_ready_3 WHEN readyout = '1' ELSE
      fout_ready_1;

  ce_out <= clk_enable;

  fout_ready <= tmp_150;

END rtl;

