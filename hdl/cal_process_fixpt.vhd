-- -------------------------------------------------------------
-- 
-- File Name: /u/home/eraguzin/matlab/LNspec/matlab/codegen/cal_process/hdlsrc/cal_process_fixpt.vhd
-- Created: 2024-01-11 11:33:35
-- 
-- Generated by MATLAB 9.12, MATLAB Coder 5.4 and HDL Coder 3.20
-- 
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Design base rate: 1
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- drift                         ce_out        1
-- have_lock_out                 ce_out        1
-- foutreal1                     ce_out        1
-- foutimag1                     ce_out        1
-- foutreal2                     ce_out        1
-- foutimag2                     ce_out        1
-- foutreal3                     ce_out        1
-- foutimag3                     ce_out        1
-- foutreal4                     ce_out        1
-- foutimag4                     ce_out        1
-- fout_ready                    ce_out        1
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: cal_process_fixpt
-- Source Path: cal_process_fixpt
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.cal_process_fixpt_pkg.ALL;

ENTITY cal_process_fixpt IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        outreal1                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        outimag1                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        powertop1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En18
        powerbot1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En30
        drift_FD1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En4
        drift_SD1                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_E11
        outreal2                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En25
        outimag2                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En25
        powertop2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En21
        powerbot2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En21
        drift_FD2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En7
        drift_SD2                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_E8
        outreal3                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        outimag3                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        powertop3                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En18
        powerbot3                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En30
        drift_FD3                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En4
        drift_SD3                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_E11
        outreal4                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En25
        outimag4                          :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En25
        powertop4                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En21
        powerbot4                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32_En21
        drift_FD4                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En7
        drift_SD4                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_E8
        calbin                            :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        readyout                          :   IN    std_logic;
        drift_1                           :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En43
        update_drift                      :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        drift                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En43
        have_lock_out                     :   OUT   std_logic;
        foutreal1                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En20
        foutimag1                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En20
        foutreal2                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        foutimag2                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        foutreal3                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En20
        foutimag3                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En20
        foutreal4                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        foutimag4                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En24
        fout_ready                        :   OUT   std_logic
        );
END cal_process_fixpt;


ARCHITECTURE rtl OF cal_process_fixpt IS

  -- Constants
  CONSTANT C_divbyzero_p                  : unsigned(61 DOWNTO 0) := 
    unsigned'("11111111111111111111111111111111111111111111111111111111111111");  -- ufix62
  CONSTANT C_divbyzero_p_2                : unsigned(61 DOWNTO 0) := 
    unsigned'("11111111111111111111111111111111111111111111111111111111111111");  -- ufix62
  CONSTANT C_divbyzero_p_4                : signed(40 DOWNTO 0) := 
    signed'("01111111111111111111111111111111111111111");  -- sfix41
  CONSTANT C_divbyzero_n                  : signed(40 DOWNTO 0) := 
    signed'("10000000000000000000000000000000000000000");  -- sfix41
  CONSTANT C_divbyzero_p_6                : unsigned(61 DOWNTO 0) := 
    unsigned'("11111111111111111111111111111111111111111111111111111111111111");  -- ufix62
  CONSTANT C_divbyzero_p_8                : unsigned(61 DOWNTO 0) := 
    unsigned'("11111111111111111111111111111111111111111111111111111111111111");  -- ufix62
  CONSTANT C_divbyzero_p_10               : signed(40 DOWNTO 0) := 
    signed'("01111111111111111111111111111111111111111");  -- sfix41
  CONSTANT C_divbyzero_n_2                : signed(40 DOWNTO 0) := 
    signed'("10000000000000000000000000000000000000000");  -- sfix41

  -- Functions
  -- HDL_SIM_INDEX_CHECK: Enabled by the "SimIndexCheck" option.
  FUNCTION hdl_sim_index_check(addr : integer; low: integer; high: integer ) RETURN integer IS
  BEGIN
    --pragma translate off
    IF addr >= low AND addr <= high THEN
      RETURN addr;
    ELSE
      -- Index out of bounds. Undefined result. Return arbitrary value in range.
      RETURN low;
    END IF;
    --pragma translate on
    return addr;
  END FUNCTION;


  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL drift_1_signed                   : signed(31 DOWNTO 0);  -- sfix32_En43
  SIGNAL tmp                              : signed(31 DOWNTO 0);  -- sfix32_En43
  SIGNAL tmp_1                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_2                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL drift_SD1_signed                 : signed(31 DOWNTO 0);  -- sfix32_E11
  SIGNAL drift_SD2_signed                 : signed(31 DOWNTO 0);  -- sfix32_E8
  SIGNAL drift_SD3_signed                 : signed(31 DOWNTO 0);  -- sfix32_E11
  SIGNAL drift_SD4_signed                 : signed(31 DOWNTO 0);  -- sfix32_E8
  SIGNAL SD                               : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_3                            : signed(31 DOWNTO 0);  -- sfix32_E19
  SIGNAL p154tmp_add_cast                 : signed(40 DOWNTO 0);  -- sfix41_E11
  SIGNAL p154tmp_add_cast_1               : signed(40 DOWNTO 0);  -- sfix41_E11
  SIGNAL p154tmp_add_temp                 : signed(40 DOWNTO 0);  -- sfix41_E11
  SIGNAL SD_1                             : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL SD_2                             : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL SD_3                             : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL SD_4                             : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_4                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_5                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_6                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_7                            : vector_of_signed32(0 TO 3);  -- sfix32_E19 [4]
  SIGNAL tmp_8                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_9                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL powerbot1_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En30
  SIGNAL powerbot2_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En21
  SIGNAL powerbot3_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En30
  SIGNAL powerbot4_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En21
  SIGNAL bot                              : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_10                           : unsigned(31 DOWNTO 0);  -- ufix32_En15
  SIGNAL p156tmp_add_cast                 : unsigned(47 DOWNTO 0);  -- ufix48_En30
  SIGNAL p156tmp_add_cast_1               : unsigned(47 DOWNTO 0);  -- ufix48_En30
  SIGNAL p156tmp_add_temp                 : unsigned(47 DOWNTO 0);  -- ufix48_En30
  SIGNAL bot_1                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL bot_2                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL bot_3                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL bot_4                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_11                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_12                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_13                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_14                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En15 [4]
  SIGNAL tmp_15                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_16                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL powertop1_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En18
  SIGNAL powertop2_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En21
  SIGNAL powertop3_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En18
  SIGNAL powertop4_unsigned               : unsigned(31 DOWNTO 0);  -- ufix32_En21
  SIGNAL top                              : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_17                           : unsigned(31 DOWNTO 0);  -- ufix32_En9
  SIGNAL p155tmp_add_cast                 : unsigned(41 DOWNTO 0);  -- ufix42_En18
  SIGNAL p155tmp_add_cast_1               : unsigned(41 DOWNTO 0);  -- ufix42_En18
  SIGNAL p155tmp_add_temp                 : unsigned(41 DOWNTO 0);  -- ufix42_En18
  SIGNAL top_1                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL top_2                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL top_3                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL top_4                            : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_18                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_19                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_20                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL tmp_21                           : vector_of_unsigned32(0 TO 3);  -- ufix32_En9 [4]
  SIGNAL SDX                              : signed(31 DOWNTO 0);  -- sfix32_E20
  SIGNAL SDX_1                            : signed(31 DOWNTO 0);  -- sfix32_E20
  SIGNAL tmp_23                           : std_logic;
  SIGNAL p11tmp_cast                      : signed(51 DOWNTO 0);  -- sfix52
  SIGNAL delta_drift                      : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL tmp_24                           : std_logic;
  SIGNAL tmp_25                           : vector_of_signed32(0 TO 3);  -- sfix32_E4 [4]
  SIGNAL tmp_26                           : vector_of_signed32(0 TO 3);  -- sfix32_E4 [4]
  SIGNAL drift_FD1_signed                 : signed(31 DOWNTO 0);  -- sfix32_En4
  SIGNAL drift_FD2_signed                 : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL drift_FD3_signed                 : signed(31 DOWNTO 0);  -- sfix32_En4
  SIGNAL drift_FD4_signed                 : signed(31 DOWNTO 0);  -- sfix32_En7
  SIGNAL FD                               : vector_of_signed32(0 TO 3);  -- sfix32_E4 [4]
  SIGNAL tmp_27                           : signed(31 DOWNTO 0);  -- sfix32_E4
  SIGNAL p153tmp_add_cast                 : signed(40 DOWNTO 0);  -- sfix41_En4
  SIGNAL p153tmp_add_cast_1               : signed(40 DOWNTO 0);  -- sfix41_En4
  SIGNAL p153tmp_add_temp                 : signed(40 DOWNTO 0);  -- sfix41_En4
  SIGNAL FD_1                             : vector_of_signed32(0 TO 3);  -- sfix32_E4 [4]
  SIGNAL FD_2                             : vector_of_signed32(0 TO 3);  -- sfix32_E4 [4]
  SIGNAL FD_3                             : vector_of_signed32(0 TO 3);  -- sfix32_E4 [4]
  SIGNAL FD_4                             : vector_of_signed32(0 TO 3);  -- sfix32_E4 [4]
  SIGNAL tmp_28                           : vector_of_signed32(0 TO 3);  -- sfix32_E4 [4]
  SIGNAL tmp_29                           : vector_of_signed32(0 TO 3);  -- sfix32_E4 [4]
  SIGNAL tmp_30                           : vector_of_signed32(0 TO 3);  -- sfix32_E4 [4]
  SIGNAL tmp_31                           : vector_of_signed32(0 TO 3);  -- sfix32_E4 [4]
  SIGNAL FDX                              : signed(31 DOWNTO 0);  -- sfix32_E5
  SIGNAL FDX_1                            : signed(31 DOWNTO 0);  -- sfix32_E5
  SIGNAL tmp_33                           : std_logic;
  SIGNAL varargout_1                      : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL varargout_1_1                    : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL p0varargout_1_div_temp           : signed(40 DOWNTO 0);  -- sfix41_En24
  SIGNAL p0varargout_1_slice_cast         : signed(40 DOWNTO 0);  -- sfix41_En4
  SIGNAL p0varargout_1_slice_cast_1       : signed(40 DOWNTO 0);  -- sfix41_En24
  SIGNAL p0varargout_1_cast               : signed(40 DOWNTO 0);  -- sfix41_En4
  SIGNAL varargout_1_2                    : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL tmp_34                           : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL tmp_35                           : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL delta_drift_1                    : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL tmp_36                           : std_logic;
  SIGNAL tmp_37                           : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL p18tmp_cast                      : signed(32 DOWNTO 0);  -- sfix33_En42
  SIGNAL p18tmp_cast_1                    : signed(32 DOWNTO 0);  -- sfix33_En42
  SIGNAL tmp_38                           : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL tmp_39                           : std_logic;
  SIGNAL delta_drift_2                    : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL tmp_40                           : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL tmp_41                           : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL drift_2                          : signed(31 DOWNTO 0);  -- sfix32_En43
  SIGNAL p7drift_add_cast                 : signed(33 DOWNTO 0);  -- sfix34_En43
  SIGNAL p7drift_add_cast_1               : signed(33 DOWNTO 0);  -- sfix34_En43
  SIGNAL p7drift_add_temp                 : signed(33 DOWNTO 0);  -- sfix34_En43
  SIGNAL tmp_42                           : std_logic;
  SIGNAL drift_3                          : signed(31 DOWNTO 0);  -- sfix32_En43
  SIGNAL tmp_43                           : signed(31 DOWNTO 0);  -- sfix32_En43
  SIGNAL tmp_44                           : std_logic;
  SIGNAL p3tmp_cast                       : signed(83 DOWNTO 0);  -- sfix84_En74
  SIGNAL drift_4                          : signed(31 DOWNTO 0);  -- sfix32_En43
  SIGNAL tmp_45                           : signed(31 DOWNTO 0);  -- sfix32_En43
  SIGNAL tmp_46                           : signed(31 DOWNTO 0);  -- sfix32_En43
  SIGNAL tmp_47                           : signed(31 DOWNTO 0);  -- sfix32_En43
  SIGNAL tmp_48                           : signed(31 DOWNTO 0);  -- sfix32_En43
  SIGNAL tmp_49                           : std_logic;
  SIGNAL SDX_2                            : signed(31 DOWNTO 0);  -- sfix32_E20
  SIGNAL tmp_51                           : std_logic;
  SIGNAL p3tmp_cast_1                     : signed(51 DOWNTO 0);  -- sfix52
  SIGNAL have_lock                        : std_logic;
  SIGNAL tmp_52                           : std_logic;
  SIGNAL FDX_2                            : signed(31 DOWNTO 0);  -- sfix32_E5
  SIGNAL tmp_54                           : std_logic;
  SIGNAL varargout_1_3                    : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL varargout_1_4                    : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL p0varargout_1_div_temp_1         : signed(40 DOWNTO 0);  -- sfix41_En24
  SIGNAL p0varargout_1_slice_cast_2       : signed(40 DOWNTO 0);  -- sfix41_En4
  SIGNAL p0varargout_1_slice_cast_3       : signed(40 DOWNTO 0);  -- sfix41_En24
  SIGNAL p0varargout_1_cast_1             : signed(40 DOWNTO 0);  -- sfix41_En4
  SIGNAL varargout_1_5                    : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL tmp_55                           : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL tmp_56                           : signed(63 DOWNTO 0);  -- sfix64_En24
  SIGNAL delta_drift_3                    : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL tmp_57                           : std_logic;
  SIGNAL tmp_58                           : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL p10tmp_cast                      : signed(32 DOWNTO 0);  -- sfix33_En42
  SIGNAL p10tmp_cast_1                    : signed(32 DOWNTO 0);  -- sfix33_En42
  SIGNAL tmp_59                           : signed(31 DOWNTO 0);  -- sfix32_En42
  SIGNAL tmp_60                           : std_logic;
  SIGNAL have_lock_1                      : std_logic;
  SIGNAL tmp_61                           : std_logic;
  SIGNAL tmp_62                           : std_logic;
  SIGNAL have_lock_2                      : std_logic;
  SIGNAL tmp_63                           : std_logic;
  SIGNAL tmp_64                           : std_logic;
  SIGNAL tmp_65                           : std_logic;
  SIGNAL foutreal1_1                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_66                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_67                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Nac2                             : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Nac2_1                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Nac2_2                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL tmp_68                           : std_logic;
  SIGNAL tmp_69                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL tmp_70                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL tmp_71                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL tmp_72                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL tmp_73                           : std_logic;
  SIGNAL sig_real                         : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_74                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_75                           : std_logic;
  SIGNAL tmp_76                           : vector_of_signed32(0 TO 3);  -- sfix32_En20 [4]
  SIGNAL calbin_unsigned                  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL tmp_77                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p166tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_78                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outreal1_signed                  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_79                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p157tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_80                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outreal2_signed                  : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL tmp_81                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p159tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_82                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outreal3_signed                  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_83                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p161tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_84                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outreal4_signed                  : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL tmp_85                           : signed(31 DOWNTO 0);  -- int32
  SIGNAL p163tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_86                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_87                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_88                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_89                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p94tmp_add_cast                  : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p94tmp_add_cast_1                : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p94tmp_add_temp                  : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL sig_real_1                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_90                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_91                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_1                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_92                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_93                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p104tmp_add_cast                 : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p104tmp_add_cast_1               : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p104tmp_add_temp                 : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL sig_real_2                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_94                           : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_95                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_2                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_96                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_97                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p114tmp_add_cast                 : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p114tmp_add_cast_1               : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p114tmp_add_temp                 : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL sig_real_3                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_real_4                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_98                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_3                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_99                           : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_100                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p124tmp_add_cast                 : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p124tmp_add_cast_1               : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p124tmp_add_temp                 : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL sig_real_5                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_101                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_real_6                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_102                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_103                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_real_7                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_104                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL foutreal1_2                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0foutreal1_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_105                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_106                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutreal1_3                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_107                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutimag1_1                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_108                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_109                          : std_logic;
  SIGNAL sig_imag                         : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_110                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_111                          : std_logic;
  SIGNAL tmp_112                          : vector_of_signed32(0 TO 3);  -- sfix32_En20 [4]
  SIGNAL tmp_113                          : signed(31 DOWNTO 0);  -- int32
  SIGNAL p168tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_114                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outimag1_signed                  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_115                          : signed(31 DOWNTO 0);  -- int32
  SIGNAL p158tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_116                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outimag2_signed                  : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL tmp_117                          : signed(31 DOWNTO 0);  -- int32
  SIGNAL p160tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_118                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outimag3_signed                  : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_119                          : signed(31 DOWNTO 0);  -- int32
  SIGNAL p162tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_120                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL outimag4_signed                  : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL tmp_121                          : signed(31 DOWNTO 0);  -- int32
  SIGNAL p164tmp_sub_cast                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_122                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_123                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_4                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_124                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_125                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p89tmp_add_cast                  : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p89tmp_add_cast_1                : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p89tmp_add_temp                  : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL sig_imag_1                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_126                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_127                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_5                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_128                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_129                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p99tmp_add_cast                  : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p99tmp_add_cast_1                : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p99tmp_add_temp                  : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL sig_imag_2                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_130                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_131                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_6                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_132                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_133                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p109tmp_add_cast                 : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p109tmp_add_cast_1               : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL p109tmp_add_temp                 : signed(37 DOWNTO 0);  -- sfix38_En25
  SIGNAL sig_imag_3                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_imag_4                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_134                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0tmp_sub_cast_7                 : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_135                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_136                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p119tmp_add_cast                 : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p119tmp_add_cast_1               : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL p119tmp_add_temp                 : signed(36 DOWNTO 0);  -- sfix37_En24
  SIGNAL sig_imag_5                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_137                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_imag_6                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_138                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_139                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL sig_imag_7                       : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL tmp_140                          : vector_of_signed32(0 TO 2047);  -- sfix32_En20 [2048]
  SIGNAL foutimag1_2                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0foutimag1_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_141                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_142                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutimag1_3                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_143                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutreal2_1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_144                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_145                          : std_logic;
  SIGNAL foutreal2_2                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL p0foutreal2_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_146                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_147                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutreal2_3                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_148                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutimag2_1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_149                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_150                          : std_logic;
  SIGNAL foutimag2_2                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL p0foutimag2_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_151                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_152                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutimag2_3                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_153                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutreal3_1                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_154                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_155                          : std_logic;
  SIGNAL foutreal3_2                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0foutreal3_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_156                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_157                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutreal3_3                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_158                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutimag3_1                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_159                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_160                          : std_logic;
  SIGNAL foutimag3_2                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL p0foutimag3_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_161                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_162                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutimag3_3                      : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL tmp_163                          : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL foutreal4_1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_164                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_165                          : std_logic;
  SIGNAL foutreal4_2                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL p0foutreal4_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_166                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_167                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutreal4_3                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_168                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutimag4_1                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_169                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_170                          : std_logic;
  SIGNAL foutimag4_2                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL p0foutimag4_sub_cast             : signed(31 DOWNTO 0);  -- int32
  SIGNAL tmp_171                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_172                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL foutimag4_3                      : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL tmp_173                          : signed(31 DOWNTO 0);  -- sfix32_En24
  SIGNAL fout_ready_1                     : std_logic;
  SIGNAL tmp_174                          : std_logic;
  SIGNAL tmp_175                          : std_logic;
  SIGNAL fout_ready_2                     : std_logic;
  SIGNAL tmp_176                          : std_logic;
  SIGNAL tmp_177                          : std_logic;
  SIGNAL fout_ready_3                     : std_logic;
  SIGNAL tmp_178                          : std_logic;

BEGIN
  -- 'cal_process_fixpt:14' drift = fi(drift_1, 1, 32, 43, fm);
  -- 
  -- 'cal_process_fixpt:13' fm = get_fimath();
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  --                                                                          %
  -- 
  --          Generated by MATLAB 9.12 and Fixed-Point Designer 7.4           %
  -- 
  --                                                                          %
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  drift_1_signed <= signed(drift_1);

  tmp <= to_signed(0, 32);

  tmp_1 <= (OTHERS => to_signed(0, 32));

  -- 'cal_process_fixpt:127' top(:) = zeros(1,4);
  -- 
  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp57_trueregionp1
  tmp_2 <= (OTHERS => to_signed(0, 32));

  enb <= clk_enable;

  drift_SD1_signed <= signed(drift_SD1);

  drift_SD2_signed <= signed(drift_SD2);

  drift_SD3_signed <= signed(drift_SD3);

  drift_SD4_signed <= signed(drift_SD4);

  -- 'cal_process_fixpt:44' FD(2) = FD(2) + drift_FD2;
  -- 
  -- 'cal_process_fixpt:45' SD(2) = SD(2) + drift_SD2;
  -- 
  -- 'cal_process_fixpt:46' FD(3) = FD(3) + drift_FD3;
  -- 
  -- 'cal_process_fixpt:47' SD(3) = SD(3) + drift_SD3;
  -- 
  -- 'cal_process_fixpt:48' FD(4) = FD(4) + drift_FD4;
  -- 
  -- 'cal_process_fixpt:49' SD(4) = SD(4) + drift_SD4;
  -- 
  -- 'cal_process_fixpt:51' top(1) = top(1) + powertop1;
  p154tmp_add_cast <= resize(SD(0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 41);
  p154tmp_add_cast_1 <= resize(drift_SD1_signed, 41);
  p154tmp_add_temp <= p154tmp_add_cast + p154tmp_add_cast_1;
  tmp_3 <= p154tmp_add_temp(39 DOWNTO 8);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp131
  p3SD_output : PROCESS (SD, tmp_3)
  BEGIN
    SD_1 <= SD;
    SD_1(0) <= tmp_3;
  END PROCESS p3SD_output;


  p2SD_output : PROCESS (SD_1, drift_SD2_signed)
    VARIABLE add_cast : signed(43 DOWNTO 0);
    VARIABLE add_cast_0 : signed(43 DOWNTO 0);
    VARIABLE add_temp : signed(43 DOWNTO 0);
  BEGIN
    SD_2 <= SD_1;
    add_cast := resize(SD_1(1) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 44);
    add_cast_0 := resize(drift_SD2_signed, 44);
    add_temp := add_cast + add_cast_0;
    SD_2(1) <= add_temp(42 DOWNTO 11);
  END PROCESS p2SD_output;


  p1SD_output : PROCESS (SD_2, drift_SD3_signed)
    VARIABLE add_cast1 : signed(40 DOWNTO 0);
    VARIABLE add_cast_01 : signed(40 DOWNTO 0);
    VARIABLE add_temp1 : signed(40 DOWNTO 0);
  BEGIN
    SD_3 <= SD_2;
    add_cast1 := resize(SD_2(2) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 41);
    add_cast_01 := resize(drift_SD3_signed, 41);
    add_temp1 := add_cast1 + add_cast_01;
    SD_3(2) <= add_temp1(39 DOWNTO 8);
  END PROCESS p1SD_output;


  p0SD_output : PROCESS (SD_3, drift_SD4_signed)
    VARIABLE add_cast2 : signed(43 DOWNTO 0);
    VARIABLE add_cast_02 : signed(43 DOWNTO 0);
    VARIABLE add_temp2 : signed(43 DOWNTO 0);
  BEGIN
    SD_4 <= SD_3;
    add_cast2 := resize(SD_3(3) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 44);
    add_cast_02 := resize(drift_SD4_signed, 44);
    add_temp2 := add_cast2 + add_cast_02;
    SD_4(3) <= add_temp2(42 DOWNTO 11);
  END PROCESS p0SD_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp57
  
  tmp_5 <= tmp_4 WHEN update_drift = '0' ELSE
      tmp_2;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp17
  
  tmp_6 <= tmp_1 WHEN readyout = '0' ELSE
      tmp_5;

  
  tmp_7 <= tmp_4 WHEN readyout = '0' ELSE
      tmp_6;

  SD_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      SD <= (OTHERS => to_signed(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        SD <= tmp_7;
      END IF;
    END IF;
  END PROCESS SD_reg_process;


  
  tmp_4 <= SD WHEN readyout = '0' ELSE
      SD_4;

  tmp_8 <= (OTHERS => to_unsigned(0, 32));

  -- 'cal_process_fixpt:129' Nac2(:) = Nac2+fi(1, 0, 1, 0, fm);
  -- 
  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp53_trueregionp1
  tmp_9 <= (OTHERS => to_unsigned(0, 32));

  powerbot1_unsigned <= unsigned(powerbot1);

  powerbot2_unsigned <= unsigned(powerbot2);

  powerbot3_unsigned <= unsigned(powerbot3);

  powerbot4_unsigned <= unsigned(powerbot4);

  -- 'cal_process_fixpt:53' top(2) = top(2) + powertop2;
  -- 
  -- 'cal_process_fixpt:54' bot(2) = bot(2) + powerbot2;
  -- 
  -- 'cal_process_fixpt:55' top(3) = top(3) + powertop3;
  -- 
  -- 'cal_process_fixpt:56' bot(3) = bot(3) + powerbot3;
  -- 
  -- 'cal_process_fixpt:57' top(4) = top(4) + powertop4;
  -- 
  -- 'cal_process_fixpt:58' bot(4) = bot(4) + powerbot4;
  -- 
  -- 'cal_process_fixpt:60' sig_real(1,calbin) = sig_real(1,calbin)+outreal1;
  p156tmp_add_cast <= resize(bot(0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 48);
  p156tmp_add_cast_1 <= resize(powerbot1_unsigned, 48);
  p156tmp_add_temp <= p156tmp_add_cast + p156tmp_add_cast_1;
  tmp_10 <= p156tmp_add_temp(46 DOWNTO 15);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp127
  p3bot_output : PROCESS (bot, tmp_10)
  BEGIN
    bot_1 <= bot;
    bot_1(0) <= tmp_10;
  END PROCESS p3bot_output;


  p2bot_output : PROCESS (bot_1, powerbot2_unsigned)
    VARIABLE add_cast3 : unsigned(38 DOWNTO 0);
    VARIABLE add_cast_03 : unsigned(38 DOWNTO 0);
    VARIABLE add_temp3 : unsigned(38 DOWNTO 0);
  BEGIN
    bot_2 <= bot_1;
    add_cast3 := resize(bot_1(1) & '0' & '0' & '0' & '0' & '0' & '0', 39);
    add_cast_03 := resize(powerbot2_unsigned, 39);
    add_temp3 := add_cast3 + add_cast_03;
    bot_2(1) <= add_temp3(37 DOWNTO 6);
  END PROCESS p2bot_output;


  p1bot_output : PROCESS (bot_2, powerbot3_unsigned)
    VARIABLE add_cast4 : unsigned(47 DOWNTO 0);
    VARIABLE add_cast_04 : unsigned(47 DOWNTO 0);
    VARIABLE add_temp4 : unsigned(47 DOWNTO 0);
  BEGIN
    bot_3 <= bot_2;
    add_cast4 := resize(bot_2(2) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 48);
    add_cast_04 := resize(powerbot3_unsigned, 48);
    add_temp4 := add_cast4 + add_cast_04;
    bot_3(2) <= add_temp4(46 DOWNTO 15);
  END PROCESS p1bot_output;


  p0bot_output : PROCESS (bot_3, powerbot4_unsigned)
    VARIABLE add_cast5 : unsigned(38 DOWNTO 0);
    VARIABLE add_cast_05 : unsigned(38 DOWNTO 0);
    VARIABLE add_temp5 : unsigned(38 DOWNTO 0);
  BEGIN
    bot_4 <= bot_3;
    add_cast5 := resize(bot_3(3) & '0' & '0' & '0' & '0' & '0' & '0', 39);
    add_cast_05 := resize(powerbot4_unsigned, 39);
    add_temp5 := add_cast5 + add_cast_05;
    bot_4(3) <= add_temp5(37 DOWNTO 6);
  END PROCESS p0bot_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp53
  
  tmp_12 <= tmp_11 WHEN update_drift = '0' ELSE
      tmp_9;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp11
  
  tmp_13 <= tmp_8 WHEN readyout = '0' ELSE
      tmp_12;

  
  tmp_14 <= tmp_11 WHEN readyout = '0' ELSE
      tmp_13;

  bot_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      bot <= (OTHERS => to_unsigned(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        bot <= tmp_14;
      END IF;
    END IF;
  END PROCESS bot_reg_process;


  
  tmp_11 <= bot WHEN readyout = '0' ELSE
      bot_4;

  tmp_15 <= (OTHERS => to_unsigned(0, 32));

  -- 'cal_process_fixpt:128' bot(:) = zeros(1,4);
  -- 
  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp55_trueregionp1
  tmp_16 <= (OTHERS => to_unsigned(0, 32));

  powertop1_unsigned <= unsigned(powertop1);

  powertop2_unsigned <= unsigned(powertop2);

  powertop3_unsigned <= unsigned(powertop3);

  powertop4_unsigned <= unsigned(powertop4);

  -- 'cal_process_fixpt:52' bot(1) = bot(1) + powerbot1;
  p155tmp_add_cast <= resize(top(0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 42);
  p155tmp_add_cast_1 <= resize(powertop1_unsigned, 42);
  p155tmp_add_temp <= p155tmp_add_cast + p155tmp_add_cast_1;
  tmp_17 <= p155tmp_add_temp(40 DOWNTO 9);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp129
  p3top_output : PROCESS (tmp_17, top)
  BEGIN
    top_1 <= top;
    top_1(0) <= tmp_17;
  END PROCESS p3top_output;


  p2top_output : PROCESS (powertop2_unsigned, top_1)
    VARIABLE add_cast6 : unsigned(44 DOWNTO 0);
    VARIABLE add_cast_06 : unsigned(44 DOWNTO 0);
    VARIABLE add_temp6 : unsigned(44 DOWNTO 0);
  BEGIN
    top_2 <= top_1;
    add_cast6 := resize(top_1(1) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 45);
    add_cast_06 := resize(powertop2_unsigned, 45);
    add_temp6 := add_cast6 + add_cast_06;
    top_2(1) <= add_temp6(43 DOWNTO 12);
  END PROCESS p2top_output;


  p1top_output : PROCESS (powertop3_unsigned, top_2)
    VARIABLE add_cast7 : unsigned(41 DOWNTO 0);
    VARIABLE add_cast_07 : unsigned(41 DOWNTO 0);
    VARIABLE add_temp7 : unsigned(41 DOWNTO 0);
  BEGIN
    top_3 <= top_2;
    add_cast7 := resize(top_2(2) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 42);
    add_cast_07 := resize(powertop3_unsigned, 42);
    add_temp7 := add_cast7 + add_cast_07;
    top_3(2) <= add_temp7(40 DOWNTO 9);
  END PROCESS p1top_output;


  p0top_output : PROCESS (powertop4_unsigned, top_3)
    VARIABLE add_cast8 : unsigned(44 DOWNTO 0);
    VARIABLE add_cast_08 : unsigned(44 DOWNTO 0);
    VARIABLE add_temp8 : unsigned(44 DOWNTO 0);
  BEGIN
    top_4 <= top_3;
    add_cast8 := resize(top_3(3) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 45);
    add_cast_08 := resize(powertop4_unsigned, 45);
    add_temp8 := add_cast8 + add_cast_08;
    top_4(3) <= add_temp8(43 DOWNTO 12);
  END PROCESS p0top_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp55
  
  tmp_19 <= tmp_18 WHEN update_drift = '0' ELSE
      tmp_16;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp14
  
  tmp_20 <= tmp_15 WHEN readyout = '0' ELSE
      tmp_19;

  
  tmp_21 <= tmp_18 WHEN readyout = '0' ELSE
      tmp_20;

  top_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      top <= (OTHERS => to_unsigned(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        top <= tmp_21;
      END IF;
    END IF;
  END PROCESS top_reg_process;


  
  tmp_18 <= top WHEN readyout = '0' ELSE
      top_4;

  -- 'cal_process_fixpt:90' for i=1:4
  -- 
  -- 'cal_process_fixpt:91' pwr = fi(fi_div(top(i), bot(i)), 0, 32, 3, fm);
  -- 
  -- 'cal_process_fixpt:157' coder.inline( 'always' );
  -- 
  -- 'cal_process_fixpt:158' a1 = fi( a, 'RoundMode', 'fix' );
  -- 
  -- 'cal_process_fixpt:159' b1 = fi( b, 'RoundMode', 'fix' );
  -- 
  -- 'cal_process_fixpt:160' nType = divideType( a1, b1 );
  -- 
  -- 'cal_process_fixpt:161' if isfi( a ) && isfi( b ) && isscalar( b )
  -- 
  -- 'cal_process_fixpt:162' c1 = divide( nType, a1, b1 );
  -- 
  -- 'cal_process_fixpt:163' c = fi( c1, numerictype( c1 ), fimath( a ) );
  -- 
  -- 'cal_process_fixpt:92' if pwr>fi(10, 0, 4, 0, fm)
  -- 
  -- 'cal_process_fixpt:93' FDX(:) = FDX + FD(i);
  -- 
  -- 'cal_process_fixpt:94' SDX(:) = SDX + SD(i);
  -- 
  -- 'cal_process_fixpt:96' if i==1
  -- 
  -- 'cal_process_fixpt:103' have_lock(:) = false;
  SDX <= to_signed(0, 32);

  p30_output : PROCESS (SDX, tmp_11, tmp_18, tmp_4)
    VARIABLE SDX1 : signed(31 DOWNTO 0);
    VARIABLE tmp22 : unsigned(63 DOWNTO 0);
    VARIABLE tmp_0 : unsigned(63 DOWNTO 0);
    VARIABLE sdx_0 : signed(31 DOWNTO 0);
    VARIABLE t_0 : vector_of_unsigned32(0 TO 3);
    VARIABLE div_temp : vector_of_unsigned62(0 TO 3);
    VARIABLE cast : vector_of_unsigned62(0 TO 3);
    VARIABLE cast_0 : vector_of_unsigned32(0 TO 3);
    VARIABLE add_cast9 : vector_of_signed34(0 TO 3);
    VARIABLE add_cast_09 : vector_of_signed34(0 TO 3);
    VARIABLE add_temp9 : vector_of_signed34(0 TO 3);
  BEGIN
    sdx_0 := to_signed(0, 32);
    tmp_0 := to_unsigned(0, 64);
    tmp22 := to_unsigned(0, 64);
    SDX1 := SDX;

    FOR i IN 0 TO 3 LOOP
      tmp22 := unsigned'(X"FFFFFFFFFFFFFFFF");
      IF tmp_11(hdl_sim_index_check(i, 0, 3)) = to_unsigned(0, 32) THEN 
        tmp_0 := tmp22;
      ELSE 
        t_0(hdl_sim_index_check(i, 0, 3)) := tmp_11(hdl_sim_index_check(i, 0, 3));
        cast(hdl_sim_index_check(i, 0, 3)) := tmp_18(hdl_sim_index_check(i, 0, 3)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        IF t_0(hdl_sim_index_check(i, 0, 3)) = 0 THEN 
          div_temp(hdl_sim_index_check(i, 0, 3)) := C_divbyzero_p;
        ELSE 
          div_temp(hdl_sim_index_check(i, 0, 3)) := cast(hdl_sim_index_check(i, 0, 3)) / t_0(hdl_sim_index_check(i, 0, 3));
        END IF;
        tmp_0 := resize(div_temp(hdl_sim_index_check(i, 0, 3)), 64);
      END IF;
      cast_0(hdl_sim_index_check(i, 0, 3)) := tmp_0(52 DOWNTO 21);
      IF cast_0(hdl_sim_index_check(i, 0, 3)) > to_unsigned(80, 32) THEN 
        add_cast9(hdl_sim_index_check(i, 0, 3)) := resize(SDX1 & '0', 34);
        add_cast_09(hdl_sim_index_check(i, 0, 3)) := resize(tmp_4(hdl_sim_index_check(i, 0, 3)), 34);
        add_temp9(hdl_sim_index_check(i, 0, 3)) := add_cast9(hdl_sim_index_check(i, 0, 3)) + add_cast_09(hdl_sim_index_check(i, 0, 3));
        sdx_0 := add_temp9(hdl_sim_index_check(i, 0, 3))(32 DOWNTO 1);
      ELSE 
        sdx_0 := SDX1;
      END IF;
      SDX1 := sdx_0;
    END LOOP;

    SDX_1 <= SDX1;
  END PROCESS p30_output;


  p11tmp_cast <= SDX_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  tmp_23 <= '1' WHEN p11tmp_cast < to_signed(0, 52) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61_trueregionp1_falseregionp8
  delta_drift <= to_signed(44213985, 32);

  
  tmp_24 <= '1' WHEN SDX_1 = to_signed(0, 32) ELSE
      '0';

  tmp_25 <= (OTHERS => to_signed(0, 32));

  -- 'cal_process_fixpt:126' SD(:) = zeros(1,4);
  -- 
  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp59_trueregionp1
  tmp_26 <= (OTHERS => to_signed(0, 32));

  drift_FD1_signed <= signed(drift_FD1);

  drift_FD2_signed <= signed(drift_FD2);

  drift_FD3_signed <= signed(drift_FD3);

  drift_FD4_signed <= signed(drift_FD4);

  -- 'cal_process_fixpt:43' SD(1) = SD(1) + drift_SD1;
  p153tmp_add_cast <= resize(FD(0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 41);
  p153tmp_add_cast_1 <= resize(drift_FD1_signed, 41);
  p153tmp_add_temp <= p153tmp_add_cast + p153tmp_add_cast_1;
  tmp_27 <= p153tmp_add_temp(39 DOWNTO 8);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp133
  p3FD_output : PROCESS (FD, tmp_27)
  BEGIN
    FD_1 <= FD;
    FD_1(0) <= tmp_27;
  END PROCESS p3FD_output;


  p2FD_output : PROCESS (FD_1, drift_FD2_signed)
    VARIABLE add_cast10 : signed(43 DOWNTO 0);
    VARIABLE add_cast_010 : signed(43 DOWNTO 0);
    VARIABLE add_temp10 : signed(43 DOWNTO 0);
  BEGIN
    FD_2 <= FD_1;
    add_cast10 := resize(FD_1(1) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 44);
    add_cast_010 := resize(drift_FD2_signed, 44);
    add_temp10 := add_cast10 + add_cast_010;
    FD_2(1) <= add_temp10(42 DOWNTO 11);
  END PROCESS p2FD_output;


  p1FD_output : PROCESS (FD_2, drift_FD3_signed)
    VARIABLE add_cast11 : signed(40 DOWNTO 0);
    VARIABLE add_cast_011 : signed(40 DOWNTO 0);
    VARIABLE add_temp11 : signed(40 DOWNTO 0);
  BEGIN
    FD_3 <= FD_2;
    add_cast11 := resize(FD_2(2) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 41);
    add_cast_011 := resize(drift_FD3_signed, 41);
    add_temp11 := add_cast11 + add_cast_011;
    FD_3(2) <= add_temp11(39 DOWNTO 8);
  END PROCESS p1FD_output;


  p0FD_output : PROCESS (FD_3, drift_FD4_signed)
    VARIABLE add_cast12 : signed(43 DOWNTO 0);
    VARIABLE add_cast_012 : signed(43 DOWNTO 0);
    VARIABLE add_temp12 : signed(43 DOWNTO 0);
  BEGIN
    FD_4 <= FD_3;
    add_cast12 := resize(FD_3(3) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 44);
    add_cast_012 := resize(drift_FD4_signed, 44);
    add_temp12 := add_cast12 + add_cast_012;
    FD_4(3) <= add_temp12(42 DOWNTO 11);
  END PROCESS p0FD_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp59
  
  tmp_29 <= tmp_28 WHEN update_drift = '0' ELSE
      tmp_26;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp20
  
  tmp_30 <= tmp_25 WHEN readyout = '0' ELSE
      tmp_29;

  
  tmp_31 <= tmp_28 WHEN readyout = '0' ELSE
      tmp_30;

  FD_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      FD <= (OTHERS => to_signed(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        FD <= tmp_31;
      END IF;
    END IF;
  END PROCESS FD_reg_process;


  -- 'cal_process_fixpt:41' if readyout
  -- 
  -- 'cal_process_fixpt:39' have_lock_out = have_lock;
  
  tmp_28 <= FD WHEN readyout = '0' ELSE
      FD_4;

  -- 'cal_process_fixpt:88' SDX = fi(0, 1, 32, -20, fm);
  FDX <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61_trueregionp1
  p31_output : PROCESS (FDX, tmp_11, tmp_18, tmp_28)
    VARIABLE FDX1 : signed(31 DOWNTO 0);
    VARIABLE tmp32 : unsigned(63 DOWNTO 0);
    VARIABLE tmp_01 : unsigned(63 DOWNTO 0);
    VARIABLE fdx_0 : signed(31 DOWNTO 0);
    VARIABLE t_01 : vector_of_unsigned32(0 TO 3);
    VARIABLE div_temp1 : vector_of_unsigned62(0 TO 3);
    VARIABLE cast1 : vector_of_unsigned62(0 TO 3);
    VARIABLE cast_01 : vector_of_unsigned32(0 TO 3);
    VARIABLE add_cast13 : vector_of_signed34(0 TO 3);
    VARIABLE add_cast_013 : vector_of_signed34(0 TO 3);
    VARIABLE add_temp13 : vector_of_signed34(0 TO 3);
  BEGIN
    fdx_0 := to_signed(0, 32);
    tmp_01 := to_unsigned(0, 64);
    tmp32 := to_unsigned(0, 64);
    FDX1 := FDX;

    FOR i1 IN 0 TO 3 LOOP
      tmp32 := unsigned'(X"FFFFFFFFFFFFFFFF");
      IF tmp_11(hdl_sim_index_check(i1, 0, 3)) = to_unsigned(0, 32) THEN 
        tmp_01 := tmp32;
      ELSE 
        t_01(hdl_sim_index_check(i1, 0, 3)) := tmp_11(hdl_sim_index_check(i1, 0, 3));
        cast1(hdl_sim_index_check(i1, 0, 3)) := tmp_18(hdl_sim_index_check(i1, 0, 3)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        IF t_01(hdl_sim_index_check(i1, 0, 3)) = 0 THEN 
          div_temp1(hdl_sim_index_check(i1, 0, 3)) := C_divbyzero_p_2;
        ELSE 
          div_temp1(hdl_sim_index_check(i1, 0, 3)) := cast1(hdl_sim_index_check(i1, 0, 3)) / t_01(hdl_sim_index_check(i1, 0, 3));
        END IF;
        tmp_01 := resize(div_temp1(hdl_sim_index_check(i1, 0, 3)), 64);
      END IF;
      cast_01(hdl_sim_index_check(i1, 0, 3)) := tmp_01(52 DOWNTO 21);
      IF cast_01(hdl_sim_index_check(i1, 0, 3)) > to_unsigned(80, 32) THEN 
        add_cast13(hdl_sim_index_check(i1, 0, 3)) := resize(FDX1 & '0', 34);
        add_cast_013(hdl_sim_index_check(i1, 0, 3)) := resize(tmp_28(hdl_sim_index_check(i1, 0, 3)), 34);
        add_temp13(hdl_sim_index_check(i1, 0, 3)) := add_cast13(hdl_sim_index_check(i1, 0, 3)) + add_cast_013(hdl_sim_index_check(i1, 0, 3));
        fdx_0 := add_temp13(hdl_sim_index_check(i1, 0, 3))(32 DOWNTO 1);
      ELSE 
        fdx_0 := FDX1;
      END IF;
      FDX1 := fdx_0;
    END LOOP;

    FDX_1 <= FDX1;
  END PROCESS p31_output;


  
  tmp_33 <= '1' WHEN FDX_1 < to_signed(0, 32) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61_trueregionp1_falseregionp25
  varargout_1 <= signed'(X"7FFFFFFFFFFFFFFF");

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61_trueregionp1_falseregionp20
  p0varargout_1_slice_cast <= FDX_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  p0varargout_1_slice_cast_1 <= C_divbyzero_p_4 WHEN p0varargout_1_slice_cast(40) = SDX_1(31) ELSE
      C_divbyzero_n;
  p0varargout_1_cast <= FDX_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  p0varargout_1_div_temp <= p0varargout_1_slice_cast_1 WHEN SDX_1 = 0 ELSE
      p0varargout_1_cast / SDX_1;
  varargout_1_1 <= resize(p0varargout_1_div_temp, 64);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61_trueregionp1_trueregionp25
  varargout_1_2 <= signed'(X"8000000000000000");

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61_trueregionp1_trueregionp20
  
  tmp_34 <= varargout_1 WHEN tmp_33 = '0' ELSE
      varargout_1_2;

  
  tmp_35 <= varargout_1_1 WHEN tmp_24 = '0' ELSE
      tmp_34;

  delta_drift_1 <= tmp_35(13 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';

  
  tmp_36 <= '1' WHEN delta_drift_1 < to_signed(0, 32) ELSE
      '0';

  p18tmp_cast <= resize(delta_drift_1, 33);
  p18tmp_cast_1 <=  - (p18tmp_cast);
  tmp_37 <= p18tmp_cast_1(31 DOWNTO 0);

  
  tmp_38 <= delta_drift_1 WHEN tmp_36 = '0' ELSE
      tmp_37;

  
  tmp_39 <= '1' WHEN tmp_38 < to_signed(44213986, 32) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61_trueregionp1_falseregionp12
  delta_drift_2 <= to_signed(44213985, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61_trueregionp1_trueregionp8
  
  tmp_40 <= delta_drift_2 WHEN tmp_39 = '0' ELSE
      delta_drift_1;

  
  tmp_41 <= delta_drift WHEN tmp_23 = '0' ELSE
      tmp_40;

  p7drift_add_cast <= resize(drift_1_signed, 34);
  p7drift_add_cast_1 <= resize(tmp_41 & '0', 34);
  p7drift_add_temp <= p7drift_add_cast + p7drift_add_cast_1;
  drift_2 <= p7drift_add_temp(31 DOWNTO 0);

  
  tmp_42 <= '1' WHEN drift_2 > to_signed(2122271325, 32) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61_trueregionp1_trueregionp4
  drift_3 <= to_signed(-2122271326, 32);

  
  tmp_43 <= drift_2 WHEN tmp_42 = '0' ELSE
      drift_3;

  p3tmp_cast <= resize(tmp_43 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 84);
  
  tmp_44 <= '1' WHEN p3tmp_cast < signed'(X"FFFFFC0C05AD10908C514") ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61_trueregionp1_trueregionp1
  drift_4 <= to_signed(2122271325, 32);

  
  tmp_45 <= tmp_43 WHEN tmp_44 = '0' ELSE
      drift_4;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp61
  
  tmp_46 <= drift_1_signed WHEN update_drift = '0' ELSE
      tmp_45;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp22
  
  tmp_47 <= tmp WHEN readyout = '0' ELSE
      tmp_46;

  
  tmp_48 <= drift_1_signed WHEN readyout = '0' ELSE
      tmp_47;

  drift <= std_logic_vector(tmp_48);

  tmp_49 <= '0';

  p22_1_output : PROCESS (SDX, tmp_11, tmp_18, tmp_4)
    VARIABLE SDX2 : signed(31 DOWNTO 0);
    VARIABLE tmp50 : unsigned(63 DOWNTO 0);
    VARIABLE tmp_02 : unsigned(63 DOWNTO 0);
    VARIABLE sdx_01 : signed(31 DOWNTO 0);
    VARIABLE t_02 : vector_of_unsigned32(0 TO 3);
    VARIABLE div_temp2 : vector_of_unsigned62(0 TO 3);
    VARIABLE cast2 : vector_of_unsigned62(0 TO 3);
    VARIABLE cast_02 : vector_of_unsigned32(0 TO 3);
    VARIABLE add_cast14 : vector_of_signed34(0 TO 3);
    VARIABLE add_cast_014 : vector_of_signed34(0 TO 3);
    VARIABLE add_temp14 : vector_of_signed34(0 TO 3);
  BEGIN
    sdx_01 := to_signed(0, 32);
    tmp_02 := to_unsigned(0, 64);
    tmp50 := to_unsigned(0, 64);
    SDX2 := SDX;

    FOR i2 IN 0 TO 3 LOOP
      tmp50 := unsigned'(X"FFFFFFFFFFFFFFFF");
      IF tmp_11(hdl_sim_index_check(i2, 0, 3)) = to_unsigned(0, 32) THEN 
        tmp_02 := tmp50;
      ELSE 
        t_02(hdl_sim_index_check(i2, 0, 3)) := tmp_11(hdl_sim_index_check(i2, 0, 3));
        cast2(hdl_sim_index_check(i2, 0, 3)) := tmp_18(hdl_sim_index_check(i2, 0, 3)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        IF t_02(hdl_sim_index_check(i2, 0, 3)) = 0 THEN 
          div_temp2(hdl_sim_index_check(i2, 0, 3)) := C_divbyzero_p_6;
        ELSE 
          div_temp2(hdl_sim_index_check(i2, 0, 3)) := cast2(hdl_sim_index_check(i2, 0, 3)) / t_02(hdl_sim_index_check(i2, 0, 3));
        END IF;
        tmp_02 := resize(div_temp2(hdl_sim_index_check(i2, 0, 3)), 64);
      END IF;
      cast_02(hdl_sim_index_check(i2, 0, 3)) := tmp_02(52 DOWNTO 21);
      IF cast_02(hdl_sim_index_check(i2, 0, 3)) > to_unsigned(80, 32) THEN 
        add_cast14(hdl_sim_index_check(i2, 0, 3)) := resize(SDX2 & '0', 34);
        add_cast_014(hdl_sim_index_check(i2, 0, 3)) := resize(tmp_4(hdl_sim_index_check(i2, 0, 3)), 34);
        add_temp14(hdl_sim_index_check(i2, 0, 3)) := add_cast14(hdl_sim_index_check(i2, 0, 3)) + add_cast_014(hdl_sim_index_check(i2, 0, 3));
        sdx_01 := add_temp14(hdl_sim_index_check(i2, 0, 3))(32 DOWNTO 1);
      ELSE 
        sdx_01 := SDX2;
      END IF;
      SDX2 := sdx_01;
    END LOOP;

    SDX_2 <= SDX2;
  END PROCESS p22_1_output;


  p3tmp_cast_1 <= SDX_2 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  tmp_51 <= '1' WHEN p3tmp_cast_1 < to_signed(0, 52) ELSE
      '0';

  -- 'cal_process_fixpt:104' delta_drift = fi(fi_div(FDX, SDX), 1, 32, 42, fm);
  -- 
  -- 'cal_process_fixpt:157' coder.inline( 'always' );
  -- 
  -- 'cal_process_fixpt:158' a1 = fi( a, 'RoundMode', 'fix' );
  -- 
  -- 'cal_process_fixpt:159' b1 = fi( b, 'RoundMode', 'fix' );
  -- 
  -- 'cal_process_fixpt:160' nType = divideType( a1, b1 );
  -- 
  -- 'cal_process_fixpt:161' if isfi( a ) && isfi( b ) && isscalar( b )
  -- 
  -- 'cal_process_fixpt:162' c1 = divide( nType, a1, b1 );
  -- 
  -- 'cal_process_fixpt:163' c = fi( c1, numerictype( c1 ), fimath( a ) );
  -- 
  -- 'cal_process_fixpt:105' if (SDX<fi(0, 0, 1, 0, fm)) & (abs(delta_drift)<fi(0.05, 0, 32, 36, fm)*alpha_to_pdrift)
  -- 
  -- 'cal_process_fixpt:107' else
  -- 
  -- 'cal_process_fixpt:108' delta_drift(:) = fi(0.05, 0, 32, 36, fm)*alpha_to_pdrift;
  -- 
  -- 'cal_process_fixpt:107' else
  -- 
  -- 'cal_process_fixpt:108' delta_drift(:) = fi(0.05, 0, 32, 36, fm)*alpha_to_pdrift;
  -- 
  -- 'cal_process_fixpt:106' have_lock(:) = true;
  -- 
  -- 'cal_process_fixpt:111' drift = fi(drift + delta_drift, 1, 32, 43, fm);
  -- 
  -- 'cal_process_fixpt:112' if (drift>fi(1.2, 0, 32, 31, fm)*alpha_to_pdrift)
  -- 
  -- 'cal_process_fixpt:113' drift(:) = fi(-1.2, 1, 32, 30, fm)*alpha_to_pdrift;
  -- 
  -- 'cal_process_fixpt:115' if (drift<fi(-1.2, 1, 32, 30, fm)*alpha_to_pdrift)
  -- 
  -- F2F: No information found for converting the following block of code
  -- 
  -- F2F: Start block
  -- 
  -- 'cal_process_fixpt:118' drift(:) = fi(+1.2, 0, 32, 31, fm)*alpha_to_pdrift;
  -- 
  -- F2F: End block
  -- 
  -- fprintf('%f (%i), pwr = %f %f \n', drift/alpha_to_pdrift,have_lock, pwr1, pwr2);
  -- 
  -- 'cal_process_fixpt:125' FD(:) = zeros(1,4);
  have_lock <= '0';

  
  tmp_52 <= '1' WHEN SDX_2 = to_signed(0, 32) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp63_trueregionp1
  p23_output : PROCESS (FDX, tmp_11, tmp_18, tmp_28)
    VARIABLE FDX2 : signed(31 DOWNTO 0);
    VARIABLE tmp53 : unsigned(63 DOWNTO 0);
    VARIABLE tmp_03 : unsigned(63 DOWNTO 0);
    VARIABLE fdx_01 : signed(31 DOWNTO 0);
    VARIABLE t_03 : vector_of_unsigned32(0 TO 3);
    VARIABLE div_temp3 : vector_of_unsigned62(0 TO 3);
    VARIABLE cast3 : vector_of_unsigned62(0 TO 3);
    VARIABLE cast_03 : vector_of_unsigned32(0 TO 3);
    VARIABLE add_cast15 : vector_of_signed34(0 TO 3);
    VARIABLE add_cast_015 : vector_of_signed34(0 TO 3);
    VARIABLE add_temp15 : vector_of_signed34(0 TO 3);
  BEGIN
    fdx_01 := to_signed(0, 32);
    tmp_03 := to_unsigned(0, 64);
    tmp53 := to_unsigned(0, 64);
    FDX2 := FDX;

    FOR i3 IN 0 TO 3 LOOP
      tmp53 := unsigned'(X"FFFFFFFFFFFFFFFF");
      IF tmp_11(hdl_sim_index_check(i3, 0, 3)) = to_unsigned(0, 32) THEN 
        tmp_03 := tmp53;
      ELSE 
        t_03(hdl_sim_index_check(i3, 0, 3)) := tmp_11(hdl_sim_index_check(i3, 0, 3));
        cast3(hdl_sim_index_check(i3, 0, 3)) := tmp_18(hdl_sim_index_check(i3, 0, 3)) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
        IF t_03(hdl_sim_index_check(i3, 0, 3)) = 0 THEN 
          div_temp3(hdl_sim_index_check(i3, 0, 3)) := C_divbyzero_p_8;
        ELSE 
          div_temp3(hdl_sim_index_check(i3, 0, 3)) := cast3(hdl_sim_index_check(i3, 0, 3)) / t_03(hdl_sim_index_check(i3, 0, 3));
        END IF;
        tmp_03 := resize(div_temp3(hdl_sim_index_check(i3, 0, 3)), 64);
      END IF;
      cast_03(hdl_sim_index_check(i3, 0, 3)) := tmp_03(52 DOWNTO 21);
      IF cast_03(hdl_sim_index_check(i3, 0, 3)) > to_unsigned(80, 32) THEN 
        add_cast15(hdl_sim_index_check(i3, 0, 3)) := resize(FDX2 & '0', 34);
        add_cast_015(hdl_sim_index_check(i3, 0, 3)) := resize(tmp_28(hdl_sim_index_check(i3, 0, 3)), 34);
        add_temp15(hdl_sim_index_check(i3, 0, 3)) := add_cast15(hdl_sim_index_check(i3, 0, 3)) + add_cast_015(hdl_sim_index_check(i3, 0, 3));
        fdx_01 := add_temp15(hdl_sim_index_check(i3, 0, 3))(32 DOWNTO 1);
      ELSE 
        fdx_01 := FDX2;
      END IF;
      FDX2 := fdx_01;
    END LOOP;

    FDX_2 <= FDX2;
  END PROCESS p23_output;


  
  tmp_54 <= '1' WHEN FDX_2 < to_signed(0, 32) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp63_trueregionp1_falseregionp17
  varargout_1_3 <= signed'(X"7FFFFFFFFFFFFFFF");

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp63_trueregionp1_falseregionp12
  p0varargout_1_slice_cast_2 <= FDX_2 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  p0varargout_1_slice_cast_3 <= C_divbyzero_p_10 WHEN p0varargout_1_slice_cast_2(40) = SDX_2(31) ELSE
      C_divbyzero_n_2;
  p0varargout_1_cast_1 <= FDX_2 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  
  p0varargout_1_div_temp_1 <= p0varargout_1_slice_cast_3 WHEN SDX_2 = 0 ELSE
      p0varargout_1_cast_1 / SDX_2;
  varargout_1_4 <= resize(p0varargout_1_div_temp_1, 64);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp63_trueregionp1_trueregionp17
  varargout_1_5 <= signed'(X"8000000000000000");

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp63_trueregionp1_trueregionp12
  
  tmp_55 <= varargout_1_3 WHEN tmp_54 = '0' ELSE
      varargout_1_5;

  
  tmp_56 <= varargout_1_4 WHEN tmp_52 = '0' ELSE
      tmp_55;

  delta_drift_3 <= tmp_56(13 DOWNTO 0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';

  
  tmp_57 <= '1' WHEN delta_drift_3 < to_signed(0, 32) ELSE
      '0';

  p10tmp_cast <= resize(delta_drift_3, 33);
  p10tmp_cast_1 <=  - (p10tmp_cast);
  tmp_58 <= p10tmp_cast_1(31 DOWNTO 0);

  
  tmp_59 <= delta_drift_3 WHEN tmp_57 = '0' ELSE
      tmp_58;

  
  tmp_60 <= '1' WHEN tmp_59 < to_signed(44213986, 32) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp63_trueregionp1_trueregionp4
  have_lock_1 <= '1';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp63_trueregionp1_trueregionp1
  
  tmp_61 <= have_lock WHEN tmp_60 = '0' ELSE
      have_lock_1;

  
  tmp_62 <= have_lock WHEN tmp_51 = '0' ELSE
      tmp_61;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp63
  
  tmp_63 <= have_lock_2 WHEN update_drift = '0' ELSE
      tmp_62;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp25
  
  tmp_64 <= tmp_49 WHEN readyout = '0' ELSE
      tmp_63;

  
  tmp_65 <= have_lock_2 WHEN readyout = '0' ELSE
      tmp_64;

  have_lock_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      have_lock_2 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        have_lock_2 <= tmp_65;
      END IF;
    END IF;
  END PROCESS have_lock_reg_process;


  -- 'cal_process_fixpt:30' foutreal1 = fi(0, 1, 32, 20, fm);
  -- 
  -- 'cal_process_fixpt:18' if isempty(FD)
  foutreal1_1 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt
  tmp_66 <= to_signed(0, 32);

  tmp_67 <= to_unsigned(16#0#, 4);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp176
  Nac2 <= to_unsigned(16#1#, 4);

  -- 'cal_process_fixpt:130' if Nac2>fi(10, 0, 4, 0, fm)
  -- 
  -- 'cal_process_fixpt:131' Nac2(:) = 1;
  Nac2_2 <= Nac2_1 + to_unsigned(16#1#, 4);

  
  tmp_68 <= '1' WHEN Nac2_2 > to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp51_trueregionp1
  
  tmp_69 <= Nac2_2 WHEN tmp_68 = '0' ELSE
      Nac2;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp51
  
  tmp_70 <= Nac2_1 WHEN update_drift = '0' ELSE
      tmp_69;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp8
  
  tmp_71 <= tmp_67 WHEN readyout = '0' ELSE
      tmp_70;

  
  tmp_72 <= Nac2_1 WHEN readyout = '0' ELSE
      tmp_71;

  Nac2_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Nac2_1 <= to_unsigned(16#1#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Nac2_1 <= tmp_72;
      END IF;
    END IF;
  END PROCESS Nac2_reg_process;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp85
  
  tmp_73 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  sig_real <= (OTHERS => to_signed(0, 32));

  tmp_74 <= (OTHERS => to_signed(0, 32));

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp69
  
  tmp_75 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  tmp_76 <= (OTHERS => to_signed(0, 32));

  calbin_unsigned <= unsigned(calbin);

  -- 'cal_process_fixpt:79' sig_imag (:,calbin) = zeros(4,1);
  p166tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_77 <= p166tmp_sub_cast - 1;

  tmp_78 <= to_signed(0, 32);

  outreal1_signed <= signed(outreal1);

  -- 'cal_process_fixpt:61' sig_imag(1,calbin) = sig_imag(1,calbin)+outimag1;
  p157tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_79 <= p157tmp_sub_cast - 1;

  tmp_80 <= to_signed(0, 32);

  outreal2_signed <= signed(outreal2);

  -- 'cal_process_fixpt:63' sig_imag(2,calbin) = sig_imag(2,calbin)+outimag2;
  p159tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_81 <= p159tmp_sub_cast - 1;

  tmp_82 <= to_signed(0, 32);

  outreal3_signed <= signed(outreal3);

  -- 'cal_process_fixpt:65' sig_imag(3,calbin) = sig_imag(3,calbin)+outimag3;
  p161tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_83 <= p161tmp_sub_cast - 1;

  tmp_84 <= to_signed(0, 32);

  outreal4_signed <= signed(outreal4);

  -- 'cal_process_fixpt:67' sig_imag(4,calbin) = sig_imag(4,calbin)+outimag4;
  p163tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_85 <= p163tmp_sub_cast - 1;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp95
  p0tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_87 <= tmp_86(hdl_sim_index_check(to_integer(3 + resize(4 * (p0tmp_sub_cast - 1), 32)), 0, 2047));

  
  tmp_88 <= tmp_84 WHEN readyout = '0' ELSE
      tmp_87;

  p94tmp_add_cast <= resize(tmp_88 & '0' & '0' & '0' & '0' & '0', 38);
  p94tmp_add_cast_1 <= resize(outreal4_signed, 38);
  p94tmp_add_temp <= p94tmp_add_cast + p94tmp_add_cast_1;
  tmp_89 <= p94tmp_add_temp(36 DOWNTO 5);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp92
  p0sig_real_output : PROCESS (tmp_85, tmp_86, tmp_89)
    VARIABLE add_cast16 : signed(63 DOWNTO 0);
  BEGIN
    sig_real_1 <= tmp_86;
    add_cast16 := resize(tmp_85 & '0' & '0', 64);
    sig_real_1(hdl_sim_index_check(to_integer(3 + resize(add_cast16, 32)), 0, 2047)) <= tmp_89;
  END PROCESS p0sig_real_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp105
  p0tmp_sub_cast_1 <= signed(resize(calbin_unsigned, 32));
  tmp_91 <= tmp_90(hdl_sim_index_check(to_integer(2 + resize(4 * (p0tmp_sub_cast_1 - 1), 32)), 0, 2047));

  
  tmp_92 <= tmp_82 WHEN readyout = '0' ELSE
      tmp_91;

  p104tmp_add_cast <= resize(tmp_92 & '0' & '0' & '0' & '0', 37);
  p104tmp_add_cast_1 <= resize(outreal3_signed, 37);
  p104tmp_add_temp <= p104tmp_add_cast + p104tmp_add_cast_1;
  tmp_93 <= p104tmp_add_temp(35 DOWNTO 4);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp102
  p0sig_real_1_output : PROCESS (tmp_83, tmp_90, tmp_93)
    VARIABLE add_cast17 : signed(63 DOWNTO 0);
  BEGIN
    sig_real_2 <= tmp_90;
    add_cast17 := resize(tmp_83 & '0' & '0', 64);
    sig_real_2(hdl_sim_index_check(to_integer(2 + resize(add_cast17, 32)), 0, 2047)) <= tmp_93;
  END PROCESS p0sig_real_1_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp115
  p0tmp_sub_cast_2 <= signed(resize(calbin_unsigned, 32));
  tmp_95 <= tmp_94(hdl_sim_index_check(to_integer(1 + resize(4 * (p0tmp_sub_cast_2 - 1), 32)), 0, 2047));

  
  tmp_96 <= tmp_80 WHEN readyout = '0' ELSE
      tmp_95;

  p114tmp_add_cast <= resize(tmp_96 & '0' & '0' & '0' & '0' & '0', 38);
  p114tmp_add_cast_1 <= resize(outreal2_signed, 38);
  p114tmp_add_temp <= p114tmp_add_cast + p114tmp_add_cast_1;
  tmp_97 <= p114tmp_add_temp(36 DOWNTO 5);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp112
  p0sig_real_2_output : PROCESS (tmp_81, tmp_94, tmp_97)
    VARIABLE add_cast18 : signed(63 DOWNTO 0);
  BEGIN
    sig_real_3 <= tmp_94;
    add_cast18 := resize(tmp_81 & '0' & '0', 64);
    sig_real_3(hdl_sim_index_check(to_integer(1 + resize(add_cast18, 32)), 0, 2047)) <= tmp_97;
  END PROCESS p0sig_real_2_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp125
  p0tmp_sub_cast_3 <= signed(resize(calbin_unsigned, 32));
  tmp_98 <= sig_real_4(hdl_sim_index_check(to_integer(resize(4 * (p0tmp_sub_cast_3 - 1), 31)), 0, 2047));

  
  tmp_99 <= tmp_78 WHEN readyout = '0' ELSE
      tmp_98;

  p124tmp_add_cast <= resize(tmp_99 & '0' & '0' & '0' & '0', 37);
  p124tmp_add_cast_1 <= resize(outreal1_signed, 37);
  p124tmp_add_temp <= p124tmp_add_cast + p124tmp_add_cast_1;
  tmp_100 <= p124tmp_add_temp(35 DOWNTO 4);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp122
  p0sig_real_3_output : PROCESS (sig_real_4, tmp_100, tmp_79)
    VARIABLE cast4 : signed(63 DOWNTO 0);
  BEGIN
    sig_real_5 <= sig_real_4;
    cast4 := resize(tmp_79 & '0' & '0', 64);
    sig_real_5(hdl_sim_index_check(to_integer(resize(cast4, 31)), 0, 2047)) <= tmp_100;
  END PROCESS p0sig_real_3_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp69_trueregionp1
  p0sig_real_4_output : PROCESS (tmp_101, tmp_76, tmp_77)
    VARIABLE add_cast19 : vector_of_signed64(0 TO 3);
  BEGIN
    sig_real_6 <= tmp_101;

    FOR t_04 IN 0 TO 3 LOOP
      add_cast19(hdl_sim_index_check(t_04, 0, 3)) := resize(tmp_77 & '0' & '0', 64);
      sig_real_6(hdl_sim_index_check(to_integer(to_signed(t_04, 32) + resize(add_cast19(hdl_sim_index_check(t_04, 0, 3)), 32)), 0, 2047)) <= tmp_76(hdl_sim_index_check(t_04, 0, 3));
    END LOOP;

  END PROCESS p0sig_real_4_output;


  
  tmp_102 <= tmp_101 WHEN tmp_75 = '0' ELSE
      sig_real_6;

  
  tmp_103 <= tmp_74 WHEN readyout = '0' ELSE
      tmp_102;

  
  sig_real_7 <= tmp_103 WHEN readyout = '1' ELSE
      sig_real;

  
  tmp_104 <= sig_real_7 WHEN readyout = '1' ELSE
      tmp_101;

  sig_real_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sig_real_4 <= (OTHERS => to_signed(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sig_real_4 <= tmp_104;
      END IF;
    END IF;
  END PROCESS sig_real_reg_process;


  
  tmp_94 <= sig_real_4 WHEN readyout = '0' ELSE
      sig_real_5;

  
  tmp_90 <= tmp_94 WHEN readyout = '0' ELSE
      sig_real_3;

  
  tmp_86 <= tmp_90 WHEN readyout = '0' ELSE
      sig_real_2;

  
  tmp_101 <= tmp_86 WHEN readyout = '0' ELSE
      sig_real_1;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp85_trueregionp1
  p0foutreal1_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutreal1_2 <= tmp_101(hdl_sim_index_check(to_integer(resize(4 * (p0foutreal1_sub_cast - 1), 31)), 0, 2047));

  
  tmp_105 <= foutreal1_1 WHEN tmp_73 = '0' ELSE
      foutreal1_2;

  
  tmp_106 <= tmp_66 WHEN readyout = '0' ELSE
      tmp_105;

  
  foutreal1_3 <= tmp_106 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_107 <= foutreal1_3 WHEN readyout = '1' ELSE
      foutreal1_1;

  foutreal1 <= std_logic_vector(tmp_107);

  -- 'cal_process_fixpt:31' foutimag1 = fi(0, 1, 32, 20, fm);
  foutimag1_1 <= to_signed(0, 32);

  tmp_108 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp83
  
  tmp_109 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  sig_imag <= (OTHERS => to_signed(0, 32));

  tmp_110 <= (OTHERS => to_signed(0, 32));

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp67
  
  tmp_111 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  tmp_112 <= (OTHERS => to_signed(0, 32));

  -- 'cal_process_fixpt:80' fout_ready(:) = true;
  -- 
  -- 'cal_process_fixpt:83' if (update_drift)
  -- 
  -- 'cal_process_fixpt:84' phase_drift_per_ppm = fi(50e3*4096/102.4e6 *(1/1e6)*2*pi, 0, 32, 48, fm);
  -- 
  -- 'cal_process_fixpt:85' alpha_to_pdrift = fi(fi(16, 0, 5, 0, fm)*phase_drift_per_ppm, 0, 32, 44, fm);
  -- 
  -- fprintf('cdrift = %f ->', drift/alpha_to_pdrift);
  -- 
  -- 'cal_process_fixpt:87' FDX = fi(0, 1, 32, -5, fm);
  p168tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_113 <= p168tmp_sub_cast - 1;

  tmp_114 <= to_signed(0, 32);

  outimag1_signed <= signed(outimag1);

  -- 'cal_process_fixpt:62' sig_real(2,calbin) = sig_real(2,calbin)+outreal2;
  p158tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_115 <= p158tmp_sub_cast - 1;

  tmp_116 <= to_signed(0, 32);

  outimag2_signed <= signed(outimag2);

  -- 'cal_process_fixpt:64' sig_real(3,calbin) = sig_real(3,calbin)+outreal3;
  p160tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_117 <= p160tmp_sub_cast - 1;

  tmp_118 <= to_signed(0, 32);

  outimag3_signed <= signed(outimag3);

  -- 'cal_process_fixpt:66' sig_real(4,calbin) = sig_real(4,calbin)+outreal4;
  p162tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_119 <= p162tmp_sub_cast - 1;

  -- 'cal_process_fixpt:42' FD(1) = FD(1) + drift_FD1;
  tmp_120 <= to_signed(0, 32);

  outimag4_signed <= signed(outimag4);

  -- 'cal_process_fixpt:69' if Nac2 == fi(10, 0, 4, 0, fm)
  -- 
  -- 'cal_process_fixpt:70' foutreal1(:) = sig_real(1,calbin);
  -- 
  -- 'cal_process_fixpt:71' foutimag1(:) = sig_imag(1,calbin);
  -- 
  -- 'cal_process_fixpt:72' foutreal2(:) = sig_real(2,calbin);
  -- 
  -- 'cal_process_fixpt:73' foutimag2(:) = sig_imag(2,calbin);
  -- 
  -- 'cal_process_fixpt:74' foutreal3(:) = sig_real(3,calbin);
  -- 
  -- 'cal_process_fixpt:75' foutimag3(:) = sig_imag(3,calbin);
  -- 
  -- 'cal_process_fixpt:76' foutreal4(:) = sig_real(4,calbin);
  -- 
  -- 'cal_process_fixpt:77' foutimag4(:) = sig_imag(4,calbin);
  -- 
  -- 'cal_process_fixpt:78' sig_real (:,calbin) = zeros(4,1);
  p164tmp_sub_cast <= signed(resize(calbin_unsigned, 32));
  tmp_121 <= p164tmp_sub_cast - 1;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp90
  p0tmp_sub_cast_4 <= signed(resize(calbin_unsigned, 32));
  tmp_123 <= tmp_122(hdl_sim_index_check(to_integer(3 + resize(4 * (p0tmp_sub_cast_4 - 1), 32)), 0, 2047));

  
  tmp_124 <= tmp_120 WHEN readyout = '0' ELSE
      tmp_123;

  p89tmp_add_cast <= resize(tmp_124 & '0' & '0' & '0' & '0' & '0', 38);
  p89tmp_add_cast_1 <= resize(outimag4_signed, 38);
  p89tmp_add_temp <= p89tmp_add_cast + p89tmp_add_cast_1;
  tmp_125 <= p89tmp_add_temp(36 DOWNTO 5);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp87
  p0sig_imag_output : PROCESS (tmp_121, tmp_122, tmp_125)
    VARIABLE add_cast20 : signed(63 DOWNTO 0);
  BEGIN
    sig_imag_1 <= tmp_122;
    add_cast20 := resize(tmp_121 & '0' & '0', 64);
    sig_imag_1(hdl_sim_index_check(to_integer(3 + resize(add_cast20, 32)), 0, 2047)) <= tmp_125;
  END PROCESS p0sig_imag_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp100
  p0tmp_sub_cast_5 <= signed(resize(calbin_unsigned, 32));
  tmp_127 <= tmp_126(hdl_sim_index_check(to_integer(2 + resize(4 * (p0tmp_sub_cast_5 - 1), 32)), 0, 2047));

  
  tmp_128 <= tmp_118 WHEN readyout = '0' ELSE
      tmp_127;

  p99tmp_add_cast <= resize(tmp_128 & '0' & '0' & '0' & '0', 37);
  p99tmp_add_cast_1 <= resize(outimag3_signed, 37);
  p99tmp_add_temp <= p99tmp_add_cast + p99tmp_add_cast_1;
  tmp_129 <= p99tmp_add_temp(35 DOWNTO 4);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp97
  p0sig_imag_1_output : PROCESS (tmp_119, tmp_126, tmp_129)
    VARIABLE add_cast21 : signed(63 DOWNTO 0);
  BEGIN
    sig_imag_2 <= tmp_126;
    add_cast21 := resize(tmp_119 & '0' & '0', 64);
    sig_imag_2(hdl_sim_index_check(to_integer(2 + resize(add_cast21, 32)), 0, 2047)) <= tmp_129;
  END PROCESS p0sig_imag_1_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp110
  p0tmp_sub_cast_6 <= signed(resize(calbin_unsigned, 32));
  tmp_131 <= tmp_130(hdl_sim_index_check(to_integer(1 + resize(4 * (p0tmp_sub_cast_6 - 1), 32)), 0, 2047));

  
  tmp_132 <= tmp_116 WHEN readyout = '0' ELSE
      tmp_131;

  p109tmp_add_cast <= resize(tmp_132 & '0' & '0' & '0' & '0' & '0', 38);
  p109tmp_add_cast_1 <= resize(outimag2_signed, 38);
  p109tmp_add_temp <= p109tmp_add_cast + p109tmp_add_cast_1;
  tmp_133 <= p109tmp_add_temp(36 DOWNTO 5);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp107
  p0sig_imag_2_output : PROCESS (tmp_117, tmp_130, tmp_133)
    VARIABLE add_cast22 : signed(63 DOWNTO 0);
  BEGIN
    sig_imag_3 <= tmp_130;
    add_cast22 := resize(tmp_117 & '0' & '0', 64);
    sig_imag_3(hdl_sim_index_check(to_integer(1 + resize(add_cast22, 32)), 0, 2047)) <= tmp_133;
  END PROCESS p0sig_imag_2_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp120
  p0tmp_sub_cast_7 <= signed(resize(calbin_unsigned, 32));
  tmp_134 <= sig_imag_4(hdl_sim_index_check(to_integer(resize(4 * (p0tmp_sub_cast_7 - 1), 31)), 0, 2047));

  
  tmp_135 <= tmp_114 WHEN readyout = '0' ELSE
      tmp_134;

  p119tmp_add_cast <= resize(tmp_135 & '0' & '0' & '0' & '0', 37);
  p119tmp_add_cast_1 <= resize(outimag1_signed, 37);
  p119tmp_add_temp <= p119tmp_add_cast + p119tmp_add_cast_1;
  tmp_136 <= p119tmp_add_temp(35 DOWNTO 4);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp117
  p0sig_imag_3_output : PROCESS (sig_imag_4, tmp_115, tmp_136)
    VARIABLE cast5 : signed(63 DOWNTO 0);
  BEGIN
    sig_imag_5 <= sig_imag_4;
    cast5 := resize(tmp_115 & '0' & '0', 64);
    sig_imag_5(hdl_sim_index_check(to_integer(resize(cast5, 31)), 0, 2047)) <= tmp_136;
  END PROCESS p0sig_imag_3_output;


  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp67_trueregionp1
  p0sig_imag_4_output : PROCESS (tmp_112, tmp_113, tmp_137)
    VARIABLE add_cast23 : vector_of_signed64(0 TO 3);
  BEGIN
    sig_imag_6 <= tmp_137;

    FOR t_05 IN 0 TO 3 LOOP
      add_cast23(hdl_sim_index_check(t_05, 0, 3)) := resize(tmp_113 & '0' & '0', 64);
      sig_imag_6(hdl_sim_index_check(to_integer(to_signed(t_05, 32) + resize(add_cast23(hdl_sim_index_check(t_05, 0, 3)), 32)), 0, 2047)) <= tmp_112(hdl_sim_index_check(t_05, 0, 3));
    END LOOP;

  END PROCESS p0sig_imag_4_output;


  
  tmp_138 <= tmp_137 WHEN tmp_111 = '0' ELSE
      sig_imag_6;

  
  tmp_139 <= tmp_110 WHEN readyout = '0' ELSE
      tmp_138;

  
  sig_imag_7 <= tmp_139 WHEN readyout = '1' ELSE
      sig_imag;

  
  tmp_140 <= sig_imag_7 WHEN readyout = '1' ELSE
      tmp_137;

  sig_imag_reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sig_imag_4 <= (OTHERS => to_signed(0, 32));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sig_imag_4 <= tmp_140;
      END IF;
    END IF;
  END PROCESS sig_imag_reg_process;


  
  tmp_130 <= sig_imag_4 WHEN readyout = '0' ELSE
      sig_imag_5;

  
  tmp_126 <= tmp_130 WHEN readyout = '0' ELSE
      sig_imag_3;

  
  tmp_122 <= tmp_126 WHEN readyout = '0' ELSE
      sig_imag_2;

  
  tmp_137 <= tmp_122 WHEN readyout = '0' ELSE
      sig_imag_1;

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp83_trueregionp1
  p0foutimag1_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutimag1_2 <= tmp_137(hdl_sim_index_check(to_integer(resize(4 * (p0foutimag1_sub_cast - 1), 31)), 0, 2047));

  
  tmp_141 <= foutimag1_1 WHEN tmp_109 = '0' ELSE
      foutimag1_2;

  
  tmp_142 <= tmp_108 WHEN readyout = '0' ELSE
      tmp_141;

  
  foutimag1_3 <= tmp_142 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_143 <= foutimag1_3 WHEN readyout = '1' ELSE
      foutimag1_1;

  foutimag1 <= std_logic_vector(tmp_143);

  -- 'cal_process_fixpt:32' foutreal2 = fi(0, 1, 32, 24, fm);
  foutreal2_1 <= to_signed(0, 32);

  tmp_144 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp81
  
  tmp_145 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp81_trueregionp1
  p0foutreal2_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutreal2_2 <= tmp_101(hdl_sim_index_check(to_integer(1 + resize(4 * (p0foutreal2_sub_cast - 1), 32)), 0, 2047))(27 DOWNTO 0) & '0' & '0' & '0' & '0';

  
  tmp_146 <= foutreal2_1 WHEN tmp_145 = '0' ELSE
      foutreal2_2;

  
  tmp_147 <= tmp_144 WHEN readyout = '0' ELSE
      tmp_146;

  
  foutreal2_3 <= tmp_147 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_148 <= foutreal2_3 WHEN readyout = '1' ELSE
      foutreal2_1;

  foutreal2 <= std_logic_vector(tmp_148);

  -- 'cal_process_fixpt:33' foutimag2 = fi(0, 1, 32, 24, fm);
  foutimag2_1 <= to_signed(0, 32);

  tmp_149 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp79
  
  tmp_150 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp79_trueregionp1
  p0foutimag2_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutimag2_2 <= tmp_137(hdl_sim_index_check(to_integer(1 + resize(4 * (p0foutimag2_sub_cast - 1), 32)), 0, 2047))(27 DOWNTO 0) & '0' & '0' & '0' & '0';

  
  tmp_151 <= foutimag2_1 WHEN tmp_150 = '0' ELSE
      foutimag2_2;

  
  tmp_152 <= tmp_149 WHEN readyout = '0' ELSE
      tmp_151;

  
  foutimag2_3 <= tmp_152 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_153 <= foutimag2_3 WHEN readyout = '1' ELSE
      foutimag2_1;

  foutimag2 <= std_logic_vector(tmp_153);

  -- 'cal_process_fixpt:34' foutreal3 = fi(0, 1, 32, 20, fm);
  foutreal3_1 <= to_signed(0, 32);

  tmp_154 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp77
  
  tmp_155 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp77_trueregionp1
  p0foutreal3_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutreal3_2 <= tmp_101(hdl_sim_index_check(to_integer(2 + resize(4 * (p0foutreal3_sub_cast - 1), 32)), 0, 2047));

  
  tmp_156 <= foutreal3_1 WHEN tmp_155 = '0' ELSE
      foutreal3_2;

  
  tmp_157 <= tmp_154 WHEN readyout = '0' ELSE
      tmp_156;

  
  foutreal3_3 <= tmp_157 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_158 <= foutreal3_3 WHEN readyout = '1' ELSE
      foutreal3_1;

  foutreal3 <= std_logic_vector(tmp_158);

  -- 'cal_process_fixpt:35' foutimag3 = fi(0, 1, 32, 20, fm);
  foutimag3_1 <= to_signed(0, 32);

  tmp_159 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp75
  
  tmp_160 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp75_trueregionp1
  p0foutimag3_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutimag3_2 <= tmp_137(hdl_sim_index_check(to_integer(2 + resize(4 * (p0foutimag3_sub_cast - 1), 32)), 0, 2047));

  
  tmp_161 <= foutimag3_1 WHEN tmp_160 = '0' ELSE
      foutimag3_2;

  
  tmp_162 <= tmp_159 WHEN readyout = '0' ELSE
      tmp_161;

  
  foutimag3_3 <= tmp_162 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_163 <= foutimag3_3 WHEN readyout = '1' ELSE
      foutimag3_1;

  foutimag3 <= std_logic_vector(tmp_163);

  -- 'cal_process_fixpt:36' foutreal4 = fi(0, 1, 32, 24, fm);
  foutreal4_1 <= to_signed(0, 32);

  tmp_164 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp73
  
  tmp_165 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp73_trueregionp1
  p0foutreal4_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutreal4_2 <= tmp_101(hdl_sim_index_check(to_integer(3 + resize(4 * (p0foutreal4_sub_cast - 1), 32)), 0, 2047))(27 DOWNTO 0) & '0' & '0' & '0' & '0';

  
  tmp_166 <= foutreal4_1 WHEN tmp_165 = '0' ELSE
      foutreal4_2;

  
  tmp_167 <= tmp_164 WHEN readyout = '0' ELSE
      tmp_166;

  
  foutreal4_3 <= tmp_167 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_168 <= foutreal4_3 WHEN readyout = '1' ELSE
      foutreal4_1;

  foutreal4 <= std_logic_vector(tmp_168);

  -- 'cal_process_fixpt:37' foutimag4 = fi(0, 1, 32, 24, fm);
  foutimag4_1 <= to_signed(0, 32);

  tmp_169 <= to_signed(0, 32);

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp71
  
  tmp_170 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp71_trueregionp1
  p0foutimag4_sub_cast <= signed(resize(calbin_unsigned, 32));
  foutimag4_2 <= tmp_137(hdl_sim_index_check(to_integer(3 + resize(4 * (p0foutimag4_sub_cast - 1), 32)), 0, 2047))(27 DOWNTO 0) & '0' & '0' & '0' & '0';

  
  tmp_171 <= foutimag4_1 WHEN tmp_170 = '0' ELSE
      foutimag4_2;

  
  tmp_172 <= tmp_169 WHEN readyout = '0' ELSE
      tmp_171;

  
  foutimag4_3 <= tmp_172 WHEN readyout = '1' ELSE
      to_signed(0, 32);

  
  tmp_173 <= foutimag4_3 WHEN readyout = '1' ELSE
      foutimag4_1;

  foutimag4 <= std_logic_vector(tmp_173);

  -- 'cal_process_fixpt:38' fout_ready = false;
  fout_ready_1 <= '0';

  tmp_174 <= '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp65
  
  tmp_175 <= '1' WHEN Nac2_1 = to_unsigned(16#A#, 4) ELSE
      '0';

  -- HDL code generation from MATLAB function: cal_process_fixpt_trueregionp65_trueregionp1
  fout_ready_2 <= '1';

  
  tmp_176 <= fout_ready_1 WHEN tmp_175 = '0' ELSE
      fout_ready_2;

  
  tmp_177 <= tmp_174 WHEN readyout = '0' ELSE
      tmp_176;

  
  fout_ready_3 <= tmp_177 WHEN readyout = '1' ELSE
      '0';

  
  tmp_178 <= fout_ready_3 WHEN readyout = '1' ELSE
      fout_ready_1;

  ce_out <= clk_enable;

  have_lock_out <= have_lock_2;

  fout_ready <= tmp_178;

END rtl;

